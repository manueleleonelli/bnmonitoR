[{"path":"https://manueleleonelli.github.io/bnmonitor/articles/Robustness.html","id":"global-monitor","dir":"Articles","previous_headings":"","what":"Global monitor","title":"Robustness to Data","text":"first useful diagnostic global_monitor, reporting contribution vertex log-likelihood model. alternative model, Dysnopea contributes log-likelihood. Global monitors can plotted giving quick view decomposition log-likelihood. darker color, substantial contribution vertex.","code":"library(bnmonitor) asia <- asia[sample(1:nrow(asia),50),] glob_asia <- node_monitor(dag = asia_bn, df = asia, alpha = 3) glob_asia_alt <- node_monitor(dag = asia_bn_alt, df = asia, alpha = 3) glob_asia #>   Vertex     Score #> 1      A  8.622186 #> 2      B 28.798130 #> 3      D 24.015552 #> 4      E  6.872393 #> 5      L 13.423495 #> 6      S 36.131966 #> 7      T  5.769555 #> 8      X 19.838721 glob_asia_alt #>   Vertex     Score #> 1      A  8.622186 #> 2      B 28.798130 #> 3      D 26.000880 #> 4      E  6.872393 #> 5      L 13.423495 #> 6      S 36.131966 #> 7      T  5.769555 #> 8      X 19.838721 plot(glob_asia)"},{"path":"https://manueleleonelli.github.io/bnmonitor/articles/Robustness.html","id":"node-monitor","dir":"Articles","previous_headings":"","what":"Node monitor","title":"Robustness to Data","text":"two variants node monitors. marginal node monitor computes probability \\(\\)th observation data set turn passing evidence \\(-1\\)th cases data set. conditional node monitor computes probability \\(\\)th observation data set passing evidence \\(-1\\)th cases data set, evidence nodes \\(\\)th case except node interest. quick survey nodes, node_monitor command computes marginal conditional monitors final observation data set. scores indicate poor fit probability distributions specified Smoking, Bronchitis, Dysnopea nodes, since larger 1.96 absolute value. Plots can also created give visual counterpart node monitors.  illustration investigate fit variable Dysnopea. sequential marginal monitor seq_marg_monitor gives us closer look particular forecasts data set might cause poor fit. examine sequential monitor candidate models.   monitors indicate observations poor fit (score 1.96 absolute value). particular alternative models marginal monitor larger values absolute value. similar analysis can conducted seq_marg_monitor, show model fits well (reported ).","code":"node_asia <- final_node_monitor(dag = asia_bn, df = asia) node_asia #>   node marg.z.score cond.z.score #> 1    A   -0.1597335   -0.1613890 #> 2    S  -16.5793259  -10.5415193 #> 3    T   -0.1597335   -0.1613890 #> 4    L   -0.2288513   -0.2313243 #> 5    B   -3.4028054   -2.8065671 #> 6    E   -0.2822414   -0.2853932 #> 7    X   -0.5457280   -0.5552700 #> 8    D   -9.5968328   -7.0590459 plot(node_asia, which = \"marginal\") seq_asia <- seq_marg_monitor(dag = asia_bn, df = asia, node.name = \"D\") seq_asia_alt <- seq_marg_monitor(dag = asia_bn_alt, df = asia, node.name = \"D\") seq_asia #> Marginal Node Monitor for D  #>  Minimum      -1.080395  #>  Maximum      1.414214 seq_asia_alt #> Marginal Node Monitor for D  #>  Minimum      -1.199249  #>  Maximum      1.414214 plot(seq_asia) plot(seq_asia_alt)"},{"path":"https://manueleleonelli.github.io/bnmonitor/articles/Robustness.html","id":"parent-child-monitor","dir":"Articles","previous_headings":"","what":"Parent Child monitor","title":"Robustness to Data","text":"vertex identified poor fit, investigation can carried check values parents model provides bad representation. can achieved seq_pa_ch_monitor function. illustration consider asia_bn BN, vertex D (Dysnopea), parent variable B (Bronchitis) can take values yes .   model, Dysnopea adequately modeled values Bronchitis, since scores largely fall recommended range.","code":"asia_pa_ch1 <- seq_pa_ch_monitor(dag = asia_bn, df = asia, node.name = \"D\", pa.names =  \"B\", pa.val =  \"yes\", alpha = 3) asia_pa_ch1 #> Parent Child Node Monitor  #>  Minimum      -1.413491  #>  Maximum      0.8722724 asia_pa_ch2 <- seq_pa_ch_monitor(dag = asia_bn, df = asia, node.name = \"D\", pa.names = \"B\", pa.val = \"no\", alpha = 3) asia_pa_ch2 #> Parent Child Node Monitor  #>  Minimum      -1.402926  #>  Maximum      1.132179 plot(asia_pa_ch1) plot(asia_pa_ch2)"},{"path":"https://manueleleonelli.github.io/bnmonitor/articles/Robustness.html","id":"influential-observations","dir":"Articles","previous_headings":"","what":"Influential observations","title":"Robustness to Data","text":"last robustness tool absolute value log-likelihood ratio model learnt without one observation one learnt full dataset. Larger values associated atomic events influence structural learning.","code":"influence <- influential_obs(dag = asia_bn, data = asia, alpha = 3) head(influence) #>       A   S  T   L   B   E   X   D     score #> 3854 no  no no  no yes  no  no yes  6.828713 #> 2535 no yes no  no yes  no  no yes  5.879189 #> 3578 no yes no  no yes  no yes  no  9.274072 #> 4966 no  no no  no  no  no  no  no  6.013563 #> 5    no  no no  no  no  no  no yes  7.731215 #> 172  no yes no yes  no yes yes yes 10.059472 plot(influence)"},{"path":"https://manueleleonelli.github.io/bnmonitor/articles/Sensitivity.html","id":"covariation-schemes","dir":"Articles","previous_headings":"","what":"Covariation schemes","title":"Sensitivity Analysis in Discrete BNs","text":"aim sensitivity analysis assess parameter changes affect output probabilities interest. one parameter changes others need adjusted can done many ways, including proportional, uniform order-preserving schemes. Suppose vary probability Alarm = FALSE given Fire = TRUE Tampering = FALSE 0.01 0.1. resulting probabilities proportional covariation scheme can computed follows. functions uniform_covar orderp_covar inputs return BN probabilities updated using uniform order-preserving covariation, respectively.","code":"proportional_covar(bnfit = fire_alarm, node = \"Alarm\", value_node = \"FALSE\", value_parents = c(\"TRUE\",\"FALSE\"), new_value = 0.1)$Alarm$prob #> , , Tampering = TRUE #>  #>              Fire #> Alarm               TRUE      FALSE #>   TRUE        0.60000000 0.65000000 #>   MALFUNCTION 0.20000000 0.20000000 #>   FALSE       0.20000000 0.15000000 #>  #> , , Tampering = FALSE #>  #>              Fire #> Alarm               TRUE      FALSE #>   TRUE        0.83636364 0.00010000 #>   MALFUNCTION 0.06363636 0.65000000 #>   FALSE       0.10000000 0.34990000"},{"path":"https://manueleleonelli.github.io/bnmonitor/articles/Sensitivity.html","id":"sensitivity-functions","dir":"Articles","previous_headings":"","what":"Sensitivity functions","title":"Sensitivity Analysis in Discrete BNs","text":"Suppose interested probability Report = TRUE varies respect probability Alarm = FALSE conditional Fire = TRUE Tampering = FALSE. can computed function sensitivity.  covariation schemes conditional probability Alarm = FALSE increases, probability Report = TRUE decreases. uniform covariation scheme reported red, proportional green order-preserving blue. function sensitivity also allows conditional probabilities interest, marginals, can set options evidence_nodes evidence_states. changes probability distribution BN, can compute distance original varied networks using Chan-Darwiche distance (CD) Kullback-Leibler divergence (KL). example consider Alarm = MALFUNCTIOn conditional Fire = TRUE Tampering = FALSE.   expected proportional covariation smallest distance/divergence covariation schemes.","code":"library(ggplot2) sens <- sensitivity(bnfit = fire_alarm, interest_node = \"Report\", interest_node_value =  \"TRUE\" , node = \"Alarm\" , value_node = \"FALSE\", value_parents = c(\"TRUE\",\"FALSE\"), new_value = \"all\", covariation = \"all\") #>  #> Attaching package: 'gRbase' #> The following objects are masked from 'package:bnlearn': #>  #>     ancestors, children, nodes, parents plot(sens) + theme(legend.title = element_text(size = 5), legend.text = element_text(size = 4), legend.position = \"bottom\") cd_distance <- CD(fire_alarm, node = \"Alarm\", value_node = \"MALFUNCTION\", value_parents = c(\"TRUE\",\"FALSE\"), new_value = \"all\", covariation = \"all\")  kl_divergence <- KL(fire_alarm, node = \"Alarm\", value_node = \"MALFUNCTION\", value_parents = c(\"TRUE\",\"FALSE\"), new_value = \"all\", covariation = \"all\")  plot(cd_distance) + theme(legend.title = element_text(size = 5), legend.text = element_text(size = 4), legend.position = \"bottom\") plot(kl_divergence) + theme(legend.title = element_text(size = 5), legend.text = element_text(size = 4), legend.position = \"bottom\")"},{"path":"https://manueleleonelli.github.io/bnmonitor/articles/Sensitivity.html","id":"sensitivity-queries","dir":"Articles","previous_headings":"","what":"Sensitivity queries","title":"Sensitivity Analysis in Discrete BNs","text":"Another task sensitivity analysis identify parameter changes meet specific constraint. example suppose want probability Report = TRUE equal 0.4. parameters change obtain probability? answer can obtained using function sensquery. five parameter changes lead probability Report = TRUE 0.4. ordered value CD distance original new network, smallest largest.","code":"sensquery(bnfit = fire_alarm, interest_node = \"Report\", interest_node_value = \"TRUE\", new_value = 0.4) #>        Node Value node Value parents Original value Suggested change #> 1   Leaving       TRUE   MALFUNCTION         0.7300        0.7983961 #> 2    Report       TRUE          TRUE         0.7500        0.8164951 #> 3 Tampering       TRUE                       0.0200        0.2018769 #> 4      Fire       TRUE                       0.0100        0.1252059 #> 5     Alarm       TRUE   FALSE,FALSE         0.0001        0.1106591 #>   CD distance #> 1   0.3816771 #> 2   0.3941673 #> 3   2.5172158 #> 4   2.6510913 #> 5   7.1262142"},{"path":"https://manueleleonelli.github.io/bnmonitor/articles/Sensitivity2.html","id":"perturbation-of-the-mean-vector","dir":"Articles","previous_headings":"","what":"Perturbation of the mean vector","title":"Sensitivity Analysis in Gaussian BNs","text":"varied Gaussian BN perturbation entry mean vector can obtained function mean_var, can applied object class GBN. , vary fifth entry mean vector (statistics) additive factor 10. overall effect variations can assessed terms dissimilarity measures: Kullback-Leibler divergence (KL) Jeffrey’s divergence (Jeffreys). instance, let’s see ’s effect variations mean statistics exam.   interestingly, one can check different effect variations different parameters (code shown).  Misspecifications mean algebra exam biggest effect distribution Gaussian BN, since leads biggest distance original varied network.","code":"mean_varied <- cbind(gbn$order, round(gbn$mean, 2),round(mean_var(gbn = gbn, entry = 5, delta = 10)$mean, 2)) colnames(mean_varied) <- c(\"Course\", \"Original Mean\", \"Varied Mean\") mean_varied #>      Course       Original Mean Varied Mean #> [1,] \"mechanics\"  \"38.95\"       \"38.95\"     #> [2,] \"vectors\"    \"50.59\"       \"50.59\"     #> [3,] \"algebra\"    \"50.6\"        \"50.6\"      #> [4,] \"analysis\"   \"46.68\"       \"46.68\"     #> [5,] \"statistics\" \"42.31\"       \"52.31\" kl_var5 <- KL(gbn, where = \"mean\", entry = 5, delta = seq(-10,10,0.1)) jef_var5 <- Jeffreys(gbn, where = \"mean\", entry = 5, delta = seq(-10,10,0.1)) plot(kl_var5) plot(jef_var5)"},{"path":"https://manueleleonelli.github.io/bnmonitor/articles/Sensitivity2.html","id":"perturbation-of-the-covariance-matrix","dir":"Articles","previous_headings":"","what":"Perturbation of the covariance matrix","title":"Sensitivity Analysis in Gaussian BNs","text":"Care must taken performing perturbations covariance matrix, two reasons: perturbed matrix may positive semidefinite; perturbed matrix may respect conditional independences underlying BN. Suppose interested assessing effect varying covariance Statistics Vectors. parameter interest correspond entry (2,5) covariance matrix. standard perturbed covariance matrix can constructed covariance_var function. Suppose want increase covariance Statistics Vectors additive factor 10. perturbation made original network structure valid new covariation matrix. order ensure perturbed covariance still valid underlying network structure, can use model-preserving methods. apply multiplicatively additively standard methods, apply change covariance via perturbation delta defined . can construct various covariation matrices using following commands: Importantly, notice standard methods applied objects class gbn, whilst model-preserving methods operate ci objects. four available methods (total, partial, row column) perturbed covariance matrix can calculated function model_pres_cov. instance case partial covariation: constructed various covariation matrices, can assess far apart original perturbed distributions various covariation methods. Available dissimilarity measures Frobenius norm (Fro), Kullback-Leibler divergence (KL) Jeffrey’s divergence (Jeffreys). Let’s consider Frobenius norm.   mean, can check entry covariance matrix biggest impact varied. simplicity pick standard method (code shown).  plot can notice less robust entries covariance matrix variance algebra, covariance algebra analysis, covariance algebra vectors. Another method quickly overview effect parameters KL_bounds creates table upper bounds Kullback-Leibler divergence entries covariance matrix covariation methods. looking standard method column, confirmation 11th entry, corresponding algebra/analysis, critical robustness network.","code":"gbn$order #> [1] \"mechanics\"  \"vectors\"    \"algebra\"    \"analysis\"   \"statistics\" gbn$covariance #>          [,1]      [,2]      [,3]      [,4]      [,5] #> [1,] 305.7680 127.22257 101.57941 100.88420 109.66411 #> [2,] 127.2226 174.23649  85.65601  85.06978  92.47337 #> [3,] 101.5794  85.65601 114.56549 113.78140 123.68375 #> [4,] 100.8842  85.06978 113.78140 223.30480 157.73746 #> [5,] 109.6641  92.47337 123.68375 157.73746 303.49318 d <- 10 covariance_var(gbn, entry = c(2,5), delta = d)$covariance #>          [,1]      [,2]      [,3]      [,4]     [,5] #> [1,] 305.7680 127.22257 101.57941 100.88420 109.6641 #> [2,] 127.2226 174.23649  85.65601  85.06978 102.4734 #> [3,] 101.5794  85.65601 114.56549 113.78140 123.6837 #> [4,] 100.8842  85.06978 113.78140 223.30480 157.7375 #> [5,] 109.6641 102.47337 123.68375 157.73746 303.4932 delta <- (d + gbn$covariance[2,5])/gbn$covariance[2,5] total_covar_matrix(ci, entry = c(2,5), delta = delta) #>          [,1]     [,2]     [,3]     [,4]     [,5] #> [1,] 1.108139 1.108139 1.108139 1.108139 1.108139 #> [2,] 1.108139 1.108139 1.108139 1.108139 1.000000 #> [3,] 1.108139 1.108139 1.108139 1.108139 1.108139 #> [4,] 1.108139 1.108139 1.108139 1.108139 1.108139 #> [5,] 1.108139 1.000000 1.108139 1.108139 1.108139 partial_covar_matrix(ci, entry = c(2,5), delta = delta) #>          [,1]     [,2]     [,3]     [,4]     [,5] #> [1,] 1.000000 1.000000 1.108139 1.108139 1.108139 #> [2,] 1.000000 1.000000 1.108139 1.108139 1.000000 #> [3,] 1.108139 1.108139 1.108139 1.108139 1.108139 #> [4,] 1.108139 1.108139 1.108139 1.108139 1.108139 #> [5,] 1.108139 1.000000 1.108139 1.108139 1.000000 row_covar_matrix(ci, entry = c(2,5), delta = delta) #>          [,1] [,2]     [,3]     [,4]     [,5] #> [1,] 1.000000    1 1.000000 1.000000 1.108139 #> [2,] 1.000000    1 1.000000 1.000000 1.000000 #> [3,] 1.000000    1 1.000000 1.000000 1.108139 #> [4,] 1.000000    1 1.000000 1.000000 1.108139 #> [5,] 1.108139    1 1.108139 1.108139 1.000000 col_covar_matrix(ci, entry = c(2,5), delta = delta) #>      [,1]     [,2]     [,3]     [,4] [,5] #> [1,]    1 1.000000 1.000000 1.000000    1 #> [2,]    1 1.000000 1.108139 1.108139    1 #> [3,]    1 1.108139 1.000000 1.000000    1 #> [4,]    1 1.108139 1.000000 1.000000    1 #> [5,]    1 1.000000 1.000000 1.000000    1 model_pres_cov(ci, type = \"partial\", entry = c(2,5), delta = delta)$covariance #>          [,1]      [,2]      [,3]      [,4]     [,5] #> [1,] 305.7680 127.22257 112.56414 111.79374 121.5231 #> [2,] 127.2226 174.23649  94.91879  94.26916 102.4734 #> [3,] 112.5641  94.91879 126.95451 126.08563 137.0588 #> [4,] 111.7937  94.26916 126.08563 247.45281 174.7951 #> [5,] 121.5231 102.47337 137.05881 174.79507 303.4932 d <- seq(-10, 10, 0.1) delta <- (d + gbn$covariance[2,5])/gbn$covariance[2,5] cov_stand <- Fro(gbn, entry = c(2,5), delta = d) cov_col <- Fro(ci, type = \"column\", entry = c(2,5), delta = delta) plot(cov_stand) plot(cov_col) KL_bounds(ci, delta = 1.2) #>    row col   standard    total  partial row_based col_based #> 1    1   1 0.08745398 2.721918 2.410370  2.410370  2.410370 #> 2    1   2 0.11113375 2.721918 2.424361  2.424361  2.424361 #> 3    1   3 0.18319140 2.721918 2.661624  2.563009  2.563009 #> 4    1   4 0.03157487 2.721918 2.661624  2.563009  2.563009 #> 5    1   5 0.02356461 2.721918 2.661624  2.508260  2.508260 #> 6    2   2 0.10479440 2.721918 2.410370  2.410370  2.410370 #> 7    2   3 0.34492801 2.721918 2.661624  2.563009  2.563009 #> 8    2   4 0.04575001 2.721918 2.661624  2.563009  2.563009 #> 9    2   5 0.03394882 2.721918 2.661624  2.508260  2.508260 #> 10   3   3 0.26127953 2.721918 2.661624  2.563009  2.563009 #> 11   3   4 1.02446834 2.721918 2.661624  2.563009  2.563009 #> 12   3   5 0.54029638 2.721918 2.661624  2.508260  2.508260 #> 13   4   4 0.14403323 2.721918 2.661624  2.563009  2.563009 #> 14   4   5 0.19426900 2.721918 2.661624  2.508260  2.508260 #> 15   5   5 0.11777072 2.721918 2.410370  2.410370  2.410370"},{"path":"https://manueleleonelli.github.io/bnmonitor/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Manuele Leonelli. Author, maintainer. Ramsiya Ramanathan. Author. Rachel Wilkerson. Author.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Leonelli M, Ramanathan R, Wilkerson R (2022). bnmonitor: Implementation Sensitivity Analysis Bayesian Networks. https://manueleleonelli.github.io/bnmonitor/, https://github.com/manueleleonelli/bnmonitor.","code":"@Manual{,   title = {bnmonitor: An Implementation of Sensitivity Analysis in Bayesian Networks},   author = {Manuele Leonelli and Ramsiya Ramanathan and Rachel Wilkerson},   year = {2022},   note = {https://manueleleonelli.github.io/bnmonitor/, https://github.com/manueleleonelli/bnmonitor}, }"},{"path":"https://manueleleonelli.github.io/bnmonitor/index.html","id":"bnmonitor","dir":"","previous_headings":"","what":"An Implementation of Sensitivity Analysis in Bayesian Networks","title":"An Implementation of Sensitivity Analysis in Bayesian Networks","text":"bnmonitor package sensitivity analysis robustness Bayesian networks (BNs).","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An Implementation of Sensitivity Analysis in Bayesian Networks","text":"package bnmonitor can installed CRAN using command loaded R Note bnmonitor requires package gRain , CRAN, depends packages Bioconductor directly gRbase package, depends RBGL:","code":"install.packages(\"bnmonitor\") library(bnmonitor) install.packages(\"BiocManager\") BiocManager::install(c(\"graph\", \"Rgraphviz\", \"RBGL\")) install.packages(\"gRain\")"},{"path":"https://manueleleonelli.github.io/bnmonitor/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"An Implementation of Sensitivity Analysis in Bayesian Networks","text":"bnmonitor provides suite function investigate either data-learnt expert elicited BN. functions can classified three main areas: Robustness discrete BNs: checking well BN represents dataset; Sensitivity discrete BNs: assessing effect changes discrete BN’s probabilities; Sensitivity continuous BNs: assessing effect changes continuous BN’s probabilities, either standard model-preserving framework Refer articles section guidance areas.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/index.html","id":"papers-where-bnmonitor-is-used","dir":"","previous_headings":"","what":"Papers where bnmonitor is used","title":"An Implementation of Sensitivity Analysis in Bayesian Networks","text":"Görgen, Christiane, Manuele Leonelli. “Model-Preserving Sensitivity Analysis Families Gaussian Distributions.” J. Mach. Learn. Res. 21 (2020): 84-1. Leonelli, Manuele, Eva Riccomagno. “geometric characterisation sensitivity analysis monomial models.” arXiv preprint arXiv:1901.02058 (2018). Leonelli, Manuele, Ramsiya Ramanathan, Rachel L. Wilkerson. “Sensitivity robustness analysis Bayesian networks bnmonitor R package.” arXiv preprint arXiv:2107.11785 (2021).","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/news.html","id":null,"dir":"","previous_headings":"","what":"bnmonitor 0.1.3","title":"bnmonitor 0.1.3","text":"Update sensquery influence functions","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/news.html","id":"bnmonitor-012","dir":"","previous_headings":"","what":"bnmonitor 0.1.2","title":"bnmonitor 0.1.3","text":"Renaming functions node_monitor global_monitor","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/news.html","id":"bnmonitor-011","dir":"","previous_headings":"","what":"bnmonitor 0.1.1","title":"bnmonitor 0.1.3","text":"Inclusion diabetes dataset Dropped dependency DiagrammeR qgraph package now used plotting","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/CD.html","id":null,"dir":"Reference","previous_headings":"","what":"CD-distance — CD","title":"CD-distance — CD","text":"Chan-Darwiche (CD) distance Bayesian network update parameter variation.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/CD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CD-distance — CD","text":"","code":"CD(   bnfit,   node,   value_node,   value_parents,   new_value,   covariation = \"proportional\" )"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/CD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CD-distance — CD","text":"bnfit object class bn.fit. node character string. Node conditional probability distribution changed. value_node character string. Level node. value_parents character string. Levels node's parents. levels defined according order parents bnfit[[node]][[\"parents\"]]. node parents, set NULL. new_value numeric vector elements 0 1. Values parameter updated. can take specific value one. case one value, defined vector increasing order elements. new_value can also set character string : case sequence possible parameter changes ranging 0.05 0.95 considered. covariation character string. Co-variation scheme used updated Bayesian network. Can take values uniform, proportional, orderp, . equal , uniform, proportional order-preserving co-variation schemes used. Set default proportional.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/CD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CD-distance — CD","text":"function CD returns dataframe including first column variations performed, following columns corresponding CD distances chosen co-variation schemes.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/CD.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CD-distance — CD","text":"Bayesian network parameter variation conducted expressed bn.fit object. name node varied, level parent's levels specified. parameter variation specified function : P ( node = value_node | parents = value_parents ) = new_value CD distance two probability distributions \\(P\\) \\(P'\\) defined sample space \\(\\mathcal{Y}\\) defined $$CD(P,P')= \\log\\max_{y\\\\mathcal{Y}}\\left(\\frac{P(y)}{P'(y)}\\right) - \\log\\min_{y\\\\mathcal{Y}}\\left(\\frac{P(y)}{P'(y)}\\right)$$","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/CD.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"CD-distance — CD","text":"Chan, H., & Darwiche, . (2005). distance measure bounding probabilistic belief change. International Journal Approximate Reasoning, 38(2), 149-174. Renooij, S. (2014). Co-variation sensitivity analysis Bayesian networks: Properties, consequences alternatives. International Journal Approximate Reasoning, 55(4), 1022-1042.","code":""},{"path":[]},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/CD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CD-distance — CD","text":"","code":"CD(synthetic_bn, \"y2\", \"1\", \"2\", \"all\", \"all\") #>    New_value   Uniform Proportional Order Preserving #> 1       0.05 2.2512918    2.0971411     2.097141e+00 #> 2       0.10 1.5040774    1.3499267     1.349927e+00 #> 3       0.15 1.0414539    0.8873032     8.873032e-01 #> 4       0.20 0.6931472    0.5389965     5.389965e-01 #> 5       0.25 0.4054651    0.2513144     2.513144e-01 #> 6       0.30 0.2876821    0.0000000     2.220446e-16 #> 7       0.30 0.2876821    0.0000000     2.220446e-16 #> 8       0.35 0.3617900    0.2282587               NA #> 9       0.40 0.5753641    0.4418328               NA #> 10      0.45 0.7801586    0.6466272               NA #> 11      0.50 0.9808293    0.8472979               NA #> 12      0.55 1.1814999    1.0479686               NA #> 13      0.60 1.3862944    1.2527630               NA #> 14      0.65 1.5998685    1.4663371               NA #> 15      0.70 1.8281271    1.6945957               NA #> 16      0.75 2.0794415    1.9459101               NA #> 17      0.80 2.3671236    2.2335922               NA #> 18      0.85 2.7154303    2.5818989               NA #> 19      0.90 3.1780538    3.0445224               NA #> 20      0.95 3.9252682    3.7917368               NA CD(synthetic_bn, \"y1\", \"2\", NULL, 0.3, \"all\") #>   New_value   Uniform Proportional Order Preserving #> 1       0.3 0.9162907            0                0"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/Fro.CI.html","id":null,"dir":"Reference","previous_headings":"","what":"Frobenius norm for CI — Fro.CI","title":"Frobenius norm for CI — Fro.CI","text":"Fro.CI returns Frobenius norm object class CI  update model-preserving parameter variation.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/Fro.CI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Frobenius norm for CI — Fro.CI","text":"","code":"# S3 method for CI Fro(x, type, entry, delta, log = TRUE, ...)"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/Fro.CI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Frobenius norm for CI — Fro.CI","text":"x object class CI. type character string. Type model-preserving co-variation: either \"total\", \"partial\", row, column . Frobenius norm computed every type co-variation matrix. entry vector length 2 indicating entry covariance matrix vary. delta numeric vector positive elements, including variation parameters act multiplicatively. log boolean value. TRUE, logarithm Frobenius norm returned. Set default TRUE. ... additional arguments compatibility.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/Fro.CI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Frobenius norm for CI — Fro.CI","text":"dataframe including first column variations performed, following columns corresponding Frobenius norms chosen model-preserving co-variations.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/Fro.CI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Frobenius norm for CI — Fro.CI","text":"Computation Frobenius norm Bayesian network updated version model-preserving variation.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/Fro.CI.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Frobenius norm for CI — Fro.CI","text":"C. Görgen & M. Leonelli (2020), Model-preserving sensitivity analysis families Gaussian distributions.  Journal Machine Learning Research, 21: 1-32.","code":""},{"path":[]},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/Fro.CI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Frobenius norm for CI — Fro.CI","text":"","code":"Fro(synthetic_ci,\"total\",c(1,1),seq(0.9,1.1,0.01)) #>    Variation Frobenius #> 1       0.90 -4.605170 #> 2       0.91 -4.815891 #> 3       0.92 -5.051457 #> 4       0.93 -5.318520 #> 5       0.94 -5.626821 #> 6       0.95 -5.991465 #> 7       0.96 -6.437752 #> 8       0.97 -7.013116 #> 9       0.98 -7.824046 #> 10      0.99 -9.210340 #> 11      1.00      -Inf #> 12      1.01 -9.210340 #> 13      1.02 -7.824046 #> 14      1.03 -7.013116 #> 15      1.04 -6.437752 #> 16      1.05 -5.991465 #> 17      1.06 -5.626821 #> 18      1.07 -5.318520 #> 19      1.08 -5.051457 #> 20      1.09 -4.815891 #> 21      1.10 -4.605170 Fro(synthetic_ci,\"partial\",c(1,4),seq(0.9,1.1,0.01)) #>    Variation  Frobenius #> 1       0.90         NA #> 2       0.91 -0.2309237 #> 3       0.92 -0.4664898 #> 4       0.93 -0.7335526 #> 5       0.94 -1.0418540 #> 6       0.95 -1.4064971 #> 7       0.96 -1.8527842 #> 8       0.97 -2.4281483 #> 9       0.98 -3.2390785 #> 10      0.99 -4.6253729 #> 11      1.00       -Inf #> 12      1.01 -4.6253729 #> 13      1.02 -3.2390785 #> 14      1.03 -2.4281483 #> 15      1.04 -1.8527842 #> 16      1.05         NA #> 17      1.06         NA #> 18      1.07         NA #> 19      1.08         NA #> 20      1.09         NA #> 21      1.10         NA Fro(synthetic_ci,\"column\",c(1,2),seq(0.9,1.1,0.01)) #>    Variation Frobenius #> 1       0.90        NA #> 2       0.91        NA #> 3       0.92        NA #> 4       0.93        NA #> 5       0.94        NA #> 6       0.95 -3.218876 #> 7       0.96 -3.665163 #> 8       0.97 -4.240527 #> 9       0.98 -5.051457 #> 10      0.99 -6.437752 #> 11      1.00      -Inf #> 12      1.01 -6.437752 #> 13      1.02 -5.051457 #> 14      1.03 -4.240527 #> 15      1.04 -3.665163 #> 16      1.05 -3.218876 #> 17      1.06 -2.854233 #> 18      1.07 -2.545931 #> 19      1.08        NA #> 20      1.09        NA #> 21      1.10        NA Fro(synthetic_ci,\"row\",c(3,2),seq(0.9,1.1,0.01)) #>    Variation  Frobenius #> 1       0.90         NA #> 2       0.91         NA #> 3       0.92         NA #> 4       0.93         NA #> 5       0.94         NA #> 6       0.95         NA #> 7       0.96         NA #> 8       0.97 -2.9526728 #> 9       0.98 -3.7636030 #> 10      0.99 -5.1498974 #> 11      1.00       -Inf #> 12      1.01 -5.1498974 #> 13      1.02 -3.7636030 #> 14      1.03 -2.9526728 #> 15      1.04 -2.3773086 #> 16      1.05 -1.9310215 #> 17      1.06 -1.5663784 #> 18      1.07 -1.2580771 #> 19      1.08 -0.9910143 #> 20      1.09 -0.7554482 #> 21      1.10         NA"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/Fro.GBN.html","id":null,"dir":"Reference","previous_headings":"","what":"Frobenius norm for GBN — Fro.GBN","title":"Frobenius norm for GBN — Fro.GBN","text":"Fro.GBN returns Frobenius norm object class GBN  update standard parameter variation.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/Fro.GBN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Frobenius norm for GBN — Fro.GBN","text":"","code":"# S3 method for GBN Fro(x, entry, delta, log = TRUE, ...)"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/Fro.GBN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Frobenius norm for GBN — Fro.GBN","text":"x object class GBN. entry vector length 2 indicating entry covariance matrix vary. delta numeric vector, including variation parameters act additively. log boolean value. TRUE, logarithm Frobenius norm returned. Set default TRUE. ... additional arguments compatibility.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/Fro.GBN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Frobenius norm for GBN — Fro.GBN","text":"dataframe including first column variations performed second column corresponding Frobenius norm.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/Fro.GBN.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Frobenius norm for GBN — Fro.GBN","text":"Computation Frobenius norm Bayesian network additively perturbed Bayesian network, perturbation either mean vector covariance matrix. Frobenius norm computed perturbations mean since always equal zero.","code":""},{"path":[]},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/Fro.GBN.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Frobenius norm for GBN — Fro.GBN","text":"","code":"Fro(synthetic_gbn,c(3,3),seq(-1,1,0.1)) #>    Variation  Frobenius #> 1       -1.0         NA #> 2       -0.9         NA #> 3       -0.8         NA #> 4       -0.7         NA #> 5       -0.6         NA #> 6       -0.5         NA #> 7       -0.4         NA #> 8       -0.3         NA #> 9       -0.2 -3.2188758 #> 10      -0.1 -4.6051702 #> 11       0.0       -Inf #> 12       0.1 -4.6051702 #> 13       0.2 -3.2188758 #> 14       0.3 -2.4079456 #> 15       0.4 -1.8325815 #> 16       0.5 -1.3862944 #> 17       0.6 -1.0216512 #> 18       0.7 -0.7133499 #> 19       0.8 -0.4462871 #> 20       0.9 -0.2107210 #> 21       1.0  0.0000000"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/Fro.html","id":null,"dir":"Reference","previous_headings":"","what":"Frobenius norm — Fro","title":"Frobenius norm — Fro","text":"Fro returns Frobenius norm Bayesian network update parameter variation.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/Fro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Frobenius norm — Fro","text":"","code":"Fro(x, ...)"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/Fro.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Frobenius norm — Fro","text":"x object class GBN CI. ... parameters specific class used.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/Fro.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Frobenius norm — Fro","text":"dataframe whose columns depend class object.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/Fro.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Frobenius norm — Fro","text":"details depend class method Fro applied .","code":""},{"path":[]},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/Jeffreys.CI.html","id":null,"dir":"Reference","previous_headings":"","what":"Jeffreys Divergence for CI — Jeffreys.CI","title":"Jeffreys Divergence for CI — Jeffreys.CI","text":"Jeffreys.CI returns Jeffreys divergence object class CI  update model-preserving parameter variation.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/Jeffreys.CI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Jeffreys Divergence for CI — Jeffreys.CI","text":"","code":"# S3 method for CI Jeffreys(x, type, entry, delta, ...)"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/Jeffreys.CI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Jeffreys Divergence for CI — Jeffreys.CI","text":"x object class CI. type character string. Type model-preserving co-variation: either \"total\", \"partial\", row,column . Jeffreys divergence computed every type co-variation matrix. entry vector length 2 indicating entry covariance matrix vary. delta numeric vector positive elements, including variation parameters act multiplicatively. ... additional arguments compatibility.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/Jeffreys.CI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Jeffreys Divergence for CI — Jeffreys.CI","text":"dataframe including first column variations performed, following columns corresponding Jeffreys divergences chosen model-preserving co-variations.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/Jeffreys.CI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Jeffreys Divergence for CI — Jeffreys.CI","text":"Computation Jeffreys divergence Bayesian network updated version model-preserving variation.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/Jeffreys.CI.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Jeffreys Divergence for CI — Jeffreys.CI","text":"C. Görgen & M. Leonelli (2020), Model-preserving sensitivity analysis families Gaussian distributions.  Journal Machine Learning Research, 21: 1-32.","code":""},{"path":[]},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/Jeffreys.CI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Jeffreys Divergence for CI — Jeffreys.CI","text":"","code":"Jeffreys(synthetic_ci,\"total\",c(1,1),seq(0.9,1.1,0.01)) #>    Variation      Jeffreys #> 1       0.90  4.500000e-01 #> 2       0.91  3.169565e-01 #> 3       0.92  2.215385e-01 #> 4       0.93  1.520690e-01 #> 5       0.94  1.012500e-01 #> 6       0.95  6.428571e-02 #> 7       0.96  3.789474e-02 #> 8       0.97  1.975610e-02 #> 9       0.98  8.181818e-03 #> 10      0.99  1.914894e-03 #> 11      1.00 -1.154632e-14 #> 12      1.01  1.698113e-03 #> 13      1.02  6.428571e-03 #> 14      1.03  1.372881e-02 #> 15      1.04  2.322581e-02 #> 16      1.05  3.461538e-02 #> 17      1.06  4.764706e-02 #> 18      1.07  6.211268e-02 #> 19      1.08  7.783784e-02 #> 20      1.09  9.467532e-02 #> 21      1.10  1.125000e-01 Jeffreys(synthetic_ci,\"partial\",c(1,4),seq(0.9,1.1,0.01)) #>    Variation      Jeffreys #> 1       0.90            NA #> 2       0.91  5.546515e+00 #> 3       0.92  2.386087e+00 #> 4       0.93  1.401482e+00 #> 5       0.94  9.022547e-01 #> 6       0.95  5.913793e-01 #> 7       0.96  3.758904e-01 #> 8       0.97  2.187536e-01 #> 9       0.98  1.044670e-01 #> 10      0.99  2.921112e-02 #> 11      1.00 -1.154632e-14 #> 12      1.01  4.310592e-02 #> 13      1.02  2.426367e-01 #> 14      1.03  9.874965e-01 #> 15      1.04  1.372000e+01 #> 16      1.05            NA #> 17      1.06            NA #> 18      1.07            NA #> 19      1.08            NA #> 20      1.09            NA #> 21      1.10            NA Jeffreys(synthetic_ci,\"column\",c(1,2),seq(0.9,1.1,0.01)) #>    Variation      Jeffreys #> 1       0.90            NA #> 2       0.91            NA #> 3       0.92            NA #> 4       0.93            NA #> 5       0.94            NA #> 6       0.95  3.185714e+00 #> 7       0.96  9.096194e-01 #> 8       0.97  3.480288e-01 #> 9       0.98  1.227907e-01 #> 10      0.99  2.656130e-02 #> 11      1.00 -1.154632e-14 #> 12      1.01  2.354191e-02 #> 13      1.02  9.519481e-02 #> 14      1.03  2.279154e-01 #> 15      1.04  4.603681e-01 #> 16      1.05  9.032787e-01 #> 17      1.06  1.988852e+00 #> 18      1.07  8.363301e+00 #> 19      1.08            NA #> 20      1.09            NA #> 21      1.10            NA Jeffreys(synthetic_ci,\"row\",c(3,2),seq(0.9,1.1,0.01)) #>    Variation      Jeffreys #> 1       0.90            NA #> 2       0.91            NA #> 3       0.92            NA #> 4       0.93            NA #> 5       0.94            NA #> 6       0.95            NA #> 7       0.96            NA #> 8       0.97  2.844994e+00 #> 9       0.98  4.140902e-01 #> 10      0.99  6.394370e-02 #> 11      1.00 -1.154632e-14 #> 12      1.01  3.898137e-02 #> 13      1.02  1.359300e-01 #> 14      1.03  2.800207e-01 #> 15      1.04  4.769514e-01 #> 16      1.05  7.504484e-01 #> 17      1.06  1.161735e+00 #> 18      1.07  1.889495e+00 #> 19      1.08  3.716283e+00 #> 20      1.09  2.343924e+01 #> 21      1.10            NA Jeffreys(synthetic_ci,\"all\",c(3,2),seq(0.9,1.1,0.01)) #>    Variation         Total       Partial     Row_based  Column_based #> 1       0.90  2.222222e-02            NA            NA            NA #> 2       0.91  1.780220e-02            NA            NA            NA #> 3       0.92  1.391304e-02            NA            NA            NA #> 4       0.93  1.053763e-02            NA            NA            NA #> 5       0.94  7.659574e-03            NA            NA            NA #> 6       0.95  5.263158e-03            NA            NA            NA #> 7       0.96  3.333333e-03            NA            NA            NA #> 8       0.97  1.855670e-03            NA  2.844994e+00            NA #> 9       0.98  8.163265e-04  1.798459e+00  4.140902e-01  8.333333e-01 #> 10      0.99  2.020202e-04  1.433278e-01  6.394370e-02  9.877622e-02 #> 11      1.00 -1.154632e-14 -1.154632e-14 -1.154632e-14 -1.154632e-14 #> 12      1.01  1.980198e-04  6.294876e-02  3.898137e-02  5.092593e-02 #> 13      1.02  7.843137e-04  2.002346e-01  1.359300e-01  1.691176e-01 #> 14      1.03  1.747573e-03  3.786784e-01  2.800207e-01  3.331882e-01 #> 15      1.04  3.076923e-03  5.882775e-01  4.769514e-01  5.416667e-01 #> 16      1.05  4.761905e-03  8.280151e-01  7.504484e-01  8.068182e-01 #> 17      1.06  6.792453e-03  1.102738e+00  1.161735e+00  1.161290e+00 #> 18      1.07  9.158879e-03  1.423943e+00  1.889495e+00  1.686594e+00 #> 19      1.08  1.185185e-02  1.814278e+00  3.716283e+00  2.631579e+00 #> 20      1.09  1.486239e-02  2.320121e+00  2.343924e+01  5.245482e+00 #> 21      1.10  1.818182e-02  3.050000e+00            NA            NA"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/Jeffreys.GBN.html","id":null,"dir":"Reference","previous_headings":"","what":"Jeffreys Divergence for GBN — Jeffreys.GBN","title":"Jeffreys Divergence for GBN — Jeffreys.GBN","text":"Jeffreys.GBN returns Jeffreys divergence object class GBN  update standard parameter variation.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/Jeffreys.GBN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Jeffreys Divergence for GBN — Jeffreys.GBN","text":"","code":"# S3 method for GBN Jeffreys(x, where, entry, delta, ...)"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/Jeffreys.GBN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Jeffreys Divergence for GBN — Jeffreys.GBN","text":"x object class GBN. character string: either mean covariance variations mean vector covariance matrix respectively. entry == \"mean\", entry index entry mean vector vary. == \"covariance\", entry vector length 2 indicating entry covariance matrix vary. delta numeric vector, including variation parameters act additively. ... additional arguments compatibility.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/Jeffreys.GBN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Jeffreys Divergence for GBN — Jeffreys.GBN","text":"dataframe including first column variations performed second column corresponding Jeffreys divergences.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/Jeffreys.GBN.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Jeffreys Divergence for GBN — Jeffreys.GBN","text":"Computation Jeffreys divergence Bayesian network additively perturbed Bayesian network, perturbation either mean vector covariance matrix.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/Jeffreys.GBN.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Jeffreys Divergence for GBN — Jeffreys.GBN","text":"Goergen, C., & Leonelli, M. (2018). Model-preserving sensitivity analysis families Gaussian distributions. arXiv preprint arXiv:1809.10794.","code":""},{"path":[]},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/Jeffreys.GBN.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Jeffreys Divergence for GBN — Jeffreys.GBN","text":"","code":"Jeffreys(synthetic_gbn,\"mean\",2,seq(-1,1,0.1)) #>    Variation Jeffreys #> 1       -1.0     3.00 #> 2       -0.9     2.43 #> 3       -0.8     1.92 #> 4       -0.7     1.47 #> 5       -0.6     1.08 #> 6       -0.5     0.75 #> 7       -0.4     0.48 #> 8       -0.3     0.27 #> 9       -0.2     0.12 #> 10      -0.1     0.03 #> 11       0.0     0.00 #> 12       0.1     0.03 #> 13       0.2     0.12 #> 14       0.3     0.27 #> 15       0.4     0.48 #> 16       0.5     0.75 #> 17       0.6     1.08 #> 18       0.7     1.47 #> 19       0.8     1.92 #> 20       0.9     2.43 #> 21       1.0     3.00 Jeffreys(synthetic_gbn,\"covariance\",c(3,3),seq(-1,1,0.1)) #>    Variation      Jeffreys #> 1       -1.0            NA #> 2       -0.9            NA #> 3       -0.8            NA #> 4       -0.7            NA #> 5       -0.6            NA #> 6       -0.5            NA #> 7       -0.4            NA #> 8       -0.3            NA #> 9       -0.2            NA #> 10      -0.1  2.500000e-01 #> 11       0.0 -5.773160e-15 #> 12       0.1  8.333333e-02 #> 13       0.2  2.500000e-01 #> 14       0.3  4.500000e-01 #> 15       0.4  6.666667e-01 #> 16       0.5  8.928571e-01 #> 17       0.6  1.125000e+00 #> 18       0.7  1.361111e+00 #> 19       0.8  1.600000e+00 #> 20       0.9  1.840909e+00 #> 21       1.0  2.083333e+00"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/Jeffreys.html","id":null,"dir":"Reference","previous_headings":"","what":"Jeffreys Divergence — Jeffreys","title":"Jeffreys Divergence — Jeffreys","text":"Jeffreys returns Jeffreys divergence continuous Bayesian network update parameter variation.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/Jeffreys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Jeffreys Divergence — Jeffreys","text":"","code":"Jeffreys(x, ...)"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/Jeffreys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Jeffreys Divergence — Jeffreys","text":"x object class bn.fit, GBN CI. ... parameters specific class used.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/Jeffreys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Jeffreys Divergence — Jeffreys","text":"dataframe whose columns depend class object.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/Jeffreys.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Jeffreys Divergence — Jeffreys","text":"details depend class method Jefrreys applied .","code":""},{"path":[]},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/KL.CI.html","id":null,"dir":"Reference","previous_headings":"","what":"KL Divergence for CI — KL.CI","title":"KL Divergence for CI — KL.CI","text":"KL.CI returns Kullback-Leibler (KL) divergence object class CI  update model-preserving parameter variation.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/KL.CI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"KL Divergence for CI — KL.CI","text":"","code":"# S3 method for CI KL(x, type, entry, delta, ...)"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/KL.CI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"KL Divergence for CI — KL.CI","text":"x object class CI. type character string. Type model-preserving co-variation: either \"total\", \"partial\", row,column . KL divergence computed every type co-variation matrix. entry vector length 2 indicating entry covariance matrix vary. delta numeric vector positive elements, including variation parameters act multiplicatively. ... additional arguments compatibility.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/KL.CI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"KL Divergence for CI — KL.CI","text":"dataframe including first column variations performed, following columns corresponding KL divergences chosen model-preserving co-variations.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/KL.CI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"KL Divergence for CI — KL.CI","text":"Computation KL divergence Bayesian network updated version model-preserving variation.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/KL.CI.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"KL Divergence for CI — KL.CI","text":"C. Görgen & M. Leonelli (2020), Model-preserving sensitivity analysis families Gaussian distributions.  Journal Machine Learning Research, 21: 1-32.","code":""},{"path":[]},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/KL.CI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"KL Divergence for CI — KL.CI","text":"","code":"KL(synthetic_ci, \"total\", c(1,1), seq(0.9,1.1,0.01)) #>    Variation            KL #> 1       0.90  1.581454e-01 #> 2       0.91  1.182644e-01 #> 3       0.92  8.696323e-02 #> 4       0.93  6.236359e-02 #> 5       0.94  4.314355e-02 #> 6       0.95  2.833747e-02 #> 7       0.96  1.721842e-02 #> 8       0.97  9.225469e-03 #> 9       0.98  3.916686e-03 #> 10      0.99  9.377019e-04 #> 11      1.00 -5.773160e-15 #> 12      1.01  8.655459e-04 #> 13      1.02  3.335657e-03 #> 14      1.03  7.242781e-03 #> 15      1.04  1.244431e-02 #> 16      1.05  1.881787e-02 #> 17      1.06  2.625765e-02 #> 18      1.07  3.467156e-02 #> 19      1.08  4.397896e-02 #> 20      1.09  5.410879e-02 #> 21      1.10  6.499819e-02 KL(synthetic_ci, \"partial\", c(1,4), seq(0.9,1.1,0.01)) #>    Variation            KL #> 1       0.90            NA #> 2       0.91  1.274584e+00 #> 3       0.92  8.571036e-01 #> 4       0.93  6.145513e-01 #> 5       0.94  4.414538e-01 #> 6       0.95  3.080593e-01 #> 7       0.96  2.023536e-01 #> 8       0.97  1.190476e-01 #> 9       0.98  5.639604e-02 #> 10      0.99  1.534863e-02 #> 11      1.00 -5.773160e-15 #> 12      1.01  1.986247e-02 #> 13      1.02  9.740759e-02 #> 14      1.03  3.015206e-01 #> 15      1.04  1.238277e+00 #> 16      1.05            NA #> 17      1.06            NA #> 18      1.07            NA #> 19      1.08            NA #> 20      1.09            NA #> 21      1.10            NA KL(synthetic_ci, \"column\", c(1,2), seq(0.9,1.1,0.01)) #>    Variation            KL #> 1       0.90            NA #> 2       0.91            NA #> 3       0.92            NA #> 4       0.93            NA #> 5       0.94            NA #> 6       0.95  6.803239e-01 #> 7       0.96  3.056625e-01 #> 8       0.97  1.420330e-01 #> 9       0.98  5.582244e-02 #> 10      0.99  1.285627e-02 #> 11      1.00 -5.773160e-15 #> 12      1.01  1.186651e-02 #> 13      1.02  4.725234e-02 #> 14      1.03  1.084758e-01 #> 15      1.04  2.026946e-01 #> 16      1.05  3.471482e-01 #> 17      1.06  5.902917e-01 #> 18      1.07  1.185352e+00 #> 19      1.08            NA #> 20      1.09            NA #> 21      1.10            NA KL(synthetic_ci, \"row\", c(3,2), seq(0.9,1.1,0.01)) #>    Variation            KL #> 1       0.90            NA #> 2       0.91            NA #> 3       0.92            NA #> 4       0.93            NA #> 5       0.94            NA #> 6       0.95            NA #> 7       0.96            NA #> 8       0.97  5.946741e-01 #> 9       0.98  1.523771e-01 #> 10      0.99  2.874803e-02 #> 11      1.00 -5.773160e-15 #> 12      1.01  2.072810e-02 #> 13      1.02  7.470749e-02 #> 14      1.03  1.554770e-01 #> 15      1.04  2.615591e-01 #> 16      1.05  3.955728e-01 #> 17      1.06  5.658572e-01 #> 18      1.07  7.932808e-01 #> 19      1.08  1.141520e+00 #> 20      1.09  2.094579e+00 #> 21      1.10            NA KL(synthetic_ci, \"all\", c(3,2), seq(0.9,1.1,0.01)) #>    Variation         Total       Partial     Row_based  Column_based #> 1       0.90  1.072103e-02            NA            NA            NA #> 2       0.91  8.621359e-03            NA            NA            NA #> 3       0.92  6.763218e-03            NA            NA            NA #> 4       0.93  5.141386e-03            NA            NA            NA #> 5       0.94  3.750807e-03            NA            NA            NA #> 6       0.95  2.586589e-03            NA            NA            NA #> 7       0.96  1.643989e-03            NA            NA            NA #> 8       0.97  9.184150e-04            NA  5.946741e-01            NA #> 9       0.98  4.054146e-04  4.415445e-01  1.523771e-01  2.608256e-01 #> 10      0.99  1.006717e-04  5.963115e-02  2.874803e-02  4.273637e-02 #> 11      1.00 -5.773160e-15 -5.773160e-15 -5.773160e-15 -5.773160e-15 #> 12      1.01  9.933829e-05  3.476601e-02  2.072810e-02  2.762796e-02 #> 13      1.02  3.947454e-04  1.176098e-01  7.470749e-02  9.625765e-02 #> 14      1.03  8.823955e-04  2.313949e-01  1.554770e-01  1.944176e-01 #> 15      1.04  1.558574e-03  3.683344e-01  2.615591e-01  3.176784e-01 #> 16      1.05  2.419672e-03  5.247737e-01  3.955728e-01  4.657731e-01 #> 17      1.06  3.462184e-03  6.994265e-01  5.658572e-01  6.424443e-01 #> 18      1.07  4.682703e-03  8.928294e-01  7.932808e-01  8.577993e-01 #> 19      1.08  6.077918e-03  1.107496e+00  1.141520e+00  1.137218e+00 #> 20      1.09  7.644608e-03  1.348902e+00  2.094579e+00  1.564738e+00 #> 21      1.10  9.379640e-03  1.628337e+00            NA            NA"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/KL.GBN.html","id":null,"dir":"Reference","previous_headings":"","what":"KL Divergence for GBN — KL.GBN","title":"KL Divergence for GBN — KL.GBN","text":"KL.GBN returns Kullback-Leibler (KL) divergence object class GBN  update standard parameter variation.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/KL.GBN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"KL Divergence for GBN — KL.GBN","text":"","code":"# S3 method for GBN KL(x, where, entry, delta, ...)"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/KL.GBN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"KL Divergence for GBN — KL.GBN","text":"x object class GBN. character string: either mean covariance variations mean vector covariance matrix respectively. entry == \"mean\", entry index entry mean vector vary. == \"covariance\", entry vector length 2 indicating entry covariance matrix vary. delta numeric vector, including variation parameters act additively. ... additional arguments compatibility.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/KL.GBN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"KL Divergence for GBN — KL.GBN","text":"dataframe including first column variations performed second column corresponding KL divergences.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/KL.GBN.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"KL Divergence for GBN — KL.GBN","text":"Computation KL divergence Bayesian network additively perturbed Bayesian network, perturbation either mean vector covariance matrix.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/KL.GBN.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"KL Divergence for GBN — KL.GBN","text":"Gómez-Villegas, M. ., Maín, P., & Susi, R. (2007). Sensitivity analysis Gaussian Bayesian networks using divergence measure. Communications Statistics—Theory Methods, 36(3), 523-539. Gómez-Villegas, M. ., Main, P., & Susi, R. (2013). effect block parameter perturbations Gaussian Bayesian networks: Sensitivity robustness. Information Sciences, 222, 439-458.","code":""},{"path":[]},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/KL.GBN.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"KL Divergence for GBN — KL.GBN","text":"","code":"KL(synthetic_gbn,\"mean\",2,seq(-1,1,0.1)) #>    Variation    KL #> 1       -1.0 1.500 #> 2       -0.9 1.215 #> 3       -0.8 0.960 #> 4       -0.7 0.735 #> 5       -0.6 0.540 #> 6       -0.5 0.375 #> 7       -0.4 0.240 #> 8       -0.3 0.135 #> 9       -0.2 0.060 #> 10      -0.1 0.015 #> 11       0.0 0.000 #> 12       0.1 0.015 #> 13       0.2 0.060 #> 14       0.3 0.135 #> 15       0.4 0.240 #> 16       0.5 0.375 #> 17       0.6 0.540 #> 18       0.7 0.735 #> 19       0.8 0.960 #> 20       0.9 1.215 #> 21       1.0 1.500 KL(synthetic_gbn,\"covariance\",c(3,3),seq(-1,1,0.1)) #>    Variation         KL #> 1       -1.0         NA #> 2       -0.9         NA #> 3       -0.8         NA #> 4       -0.7         NA #> 5       -0.6         NA #> 6       -0.5         NA #> 7       -0.4         NA #> 8       -0.3         NA #> 9       -0.2         NA #> 10      -0.1 0.09657359 #> 11       0.0 0.00000000 #> 12       0.1 0.04726745 #> 13       0.2 0.15342641 #> 14       0.3 0.29185463 #> 15       0.4 0.45069386 #> 16       0.5 0.62361852 #> 17       0.6 0.80685282 #> 18       0.7 0.99796130 #> 19       0.8 1.19528104 #> 20       0.9 1.39762595 #> 21       1.0 1.60412027"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/KL.bn.fit.html","id":null,"dir":"Reference","previous_headings":"","what":"KL Divergence for bn.fit — KL.bn.fit","title":"KL Divergence for bn.fit — KL.bn.fit","text":"KL.bn.fit returns Kullback-Leibler (KL) divergence Bayesian network update parameter variation.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/KL.bn.fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"KL Divergence for bn.fit — KL.bn.fit","text":"","code":"# S3 method for bn.fit KL(   x,   node,   value_node,   value_parents,   new_value,   covariation = \"proportional\",   ... )"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/KL.bn.fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"KL Divergence for bn.fit — KL.bn.fit","text":"x object class bn.fit. node character string. Node conditional probability distribution changed. value_node character string. Level node. value_parents character string. Levels node's parents. levels defined according order parents bnfit[[node]][[\"parents\"]]. node parents, set NULL. new_value numeric vector elements 0 1. Values parameter updated. can take specific value one. case one value, defined vector increasing order elements. new_value can also set character string : case sequence possible parameter changes ranging 0.05 0.95 considered. covariation character string. Co-variation scheme used updated Bayesian network. Can take values uniform, proportional, orderp, . equal , uniform, proportional order-preserving co-variation schemes used. Set default proportional. ... additional parameters added plot.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/KL.bn.fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"KL Divergence for bn.fit — KL.bn.fit","text":"dataframe varied parameter KL divergence different co-variation schemes. plot = TRUE function returns plot KL divergences.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/KL.bn.fit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"KL Divergence for bn.fit — KL.bn.fit","text":"Bayesian network parameter variation conducted expressed bn.fit object. name node varied, level parent's levels specified. parameter variation specified function : P ( node = value_node | parents = value_parents ) = new_value","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/KL.bn.fit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"KL Divergence for bn.fit — KL.bn.fit","text":"Kullback, S., & Leibler, R. . (1951). information sufficiency. annals mathematical statistics, 22(1), 79-86. Leonelli, M., Goergen, C., & Smith, J. Q. (2017). Sensitivity analysis multilinear probabilistic models. Information Sciences, 411, 84-97.","code":""},{"path":[]},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/KL.bn.fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"KL Divergence for bn.fit — KL.bn.fit","text":"","code":"KL(synthetic_bn, \"y2\", \"1\", \"2\", \"all\", \"all\") #>    New_value     Uniform Proportional Order Preserving #> 1       0.05 0.099278412  0.097128206     9.712821e-02 #> 2       0.10 0.048249282  0.046099076     4.609908e-02 #> 3       0.15 0.023760689  0.021610483     2.161048e-02 #> 4       0.20 0.010600473  0.008450267     8.450267e-03 #> 5       0.25 0.004070643  0.001920437     1.920437e-03 #> 6       0.30 0.002150206  0.000000000    -1.998401e-17 #> 7       0.30 0.002150206  0.000000000    -1.998401e-17 #> 8       0.35 0.003839319  0.001689113               NA #> 9       0.40 0.008630462  0.006480256               NA #> 10      0.45 0.016302378  0.014152172               NA #> 11      0.50 0.026835069  0.024684864               NA #> 12      0.55 0.040382862  0.038232656               NA #> 13      0.60 0.057286275  0.055136069               NA #> 14      0.65 0.078124024  0.075973818               NA #> 15      0.70 0.103825949  0.101675743               NA #> 16      0.75 0.135904118  0.133753912               NA #> 17      0.80 0.176955797  0.174805591               NA #> 18      0.85 0.231912816  0.229762610               NA #> 19      0.90 0.311916231  0.309766025               NA #> 20      0.95 0.452611089  0.450460883               NA KL(synthetic_bn, \"y1\", \"2\", NULL, 0.3, \"all\") #>   New_value    Uniform Proportional Order Preserving #> 1       0.3 0.06641431            0                0"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/KL.html","id":null,"dir":"Reference","previous_headings":"","what":"KL Divergence — KL","title":"KL Divergence — KL","text":"KL returns Kullback-Leibler (KL) divergence Bayesian network update parameter variation.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/KL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"KL Divergence — KL","text":"","code":"KL(x, ...)"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/KL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"KL Divergence — KL","text":"x object class bn.fit, GBN CI. ... parameters specific class used.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/KL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"KL Divergence — KL","text":"dataframe whose columns depend class object.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/KL.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"KL Divergence — KL","text":"details depend class method KL applied .","code":""},{"path":[]},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/KL_bounds.html","id":null,"dir":"Reference","previous_headings":"","what":"Bounds for the KL-divergence — KL_bounds","title":"Bounds for the KL-divergence — KL_bounds","text":"Computation bounds KL-divergence variations parameter CI object.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/KL_bounds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bounds for the KL-divergence — KL_bounds","text":"","code":"KL_bounds(ci, delta)"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/KL_bounds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bounds for the KL-divergence — KL_bounds","text":"ci object class CI. delta multiplicative variation coefficient entry covariance matrix given entry.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/KL_bounds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bounds for the KL-divergence — KL_bounds","text":"dataframe including KL-divergence bound co-variation scheme (model-preserving standard) every entry covariance matrix. variations leading non-positive semidefinite matrix, dataframe includes NA.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/KL_bounds.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bounds for the KL-divergence — KL_bounds","text":"Let \\(\\Sigma\\) covariance matrix Gaussian Bayesian network \\(n\\) vertices. Let \\(D\\) \\(\\Delta\\)  variation matrices acting additively \\(\\Sigma\\). Let also \\(\\tilde\\Delta\\) model-preserving co-variation matrix. Denote \\(Y\\) \\(\\tilde{Y}\\) original perturbed random vectors. standard sensitivity analysis $$KL(\\tilde{Y}||Y)\\leq 0.5n\\max\\left\\{f(\\lambda_{\\max}(D\\Sigma^{-1})),f(\\lambda_{\\min}(D\\Sigma^{-1}))\\right\\}$$ whilst model-preserving one $$KL(\\tilde{Y}||Y)\\leq 0.5n\\max\\left\\{f(\\lambda_{\\max}(\\tilde\\Delta\\circ\\Delta)),f(\\lambda_{\\min}(\\tilde\\Delta\\circ\\Delta))\\right\\}$$ \\(\\lambda_{\\max}\\) \\(\\lambda_{\\min}\\) largest smallest eigenvalues, respectively, \\(f(x)=\\ln(1+x)-x/(1+x)\\) \\(\\circ\\) denotes Schur element-wise product.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/KL_bounds.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bounds for the KL-divergence — KL_bounds","text":"C. Görgen & M. Leonelli (2020), Model-preserving sensitivity analysis families Gaussian distributions.  Journal Machine Learning Research, 21: 1-32.","code":""},{"path":[]},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/KL_bounds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bounds for the KL-divergence — KL_bounds","text":"","code":"KL_bounds(synthetic_ci,1.05) #>    row col   standard    total  partial row_based col_based #> 1    1   1 0.06319007 1.681933 1.622910  1.622910  1.622910 #> 2    1   2 0.71822823 1.681933 1.646925  1.630979  1.630979 #> 3    1   3 0.26097348 1.681933 1.646925  1.634914  1.634914 #> 4    1   4         NA 1.681933       NA        NA        NA #> 5    2   2 0.26208872 1.681933 1.646925  1.630979  1.630979 #> 6    2   3 2.56494598 1.681933 1.646925  1.634914  1.634914 #> 7    2   4         NA 1.681933       NA        NA        NA #> 8    3   3 0.63258146 1.681933 1.622910  1.622910  1.622910 #> 9    3   4         NA 1.681933       NA        NA        NA #> 10   4   4 1.32814438 1.681933 1.622910  1.622910  1.622910"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/bn2.html","id":null,"dir":"Reference","previous_headings":"","what":"Integration with bn.fit objects from bnlearn — bn2","title":"Integration with bn.fit objects from bnlearn — bn2","text":"Functions transform object class bn.fit bn.fit.gnet (Gaussian Bayesian network) objects class GBN CI.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/bn2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integration with bn.fit objects from bnlearn — bn2","text":"","code":"bn2gbn(bnfit)  bn2ci(bnfit)"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/bn2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integration with bn.fit objects from bnlearn — bn2","text":"bnfit object class bn.fit.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/bn2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Integration with bn.fit objects from bnlearn — bn2","text":"function bn2gbn returns object class GBN consisting list entries: order: ordering nodes according graph. mean: mean vector Gaussian distribution. covariance: covariance matrix Gaussian distribution. function bn2ci returns object class CI consisting list GBN, additional entry cond_ind. cond_ind list entry consists , B C corresponding conditional independence statements independent B given C embedded network.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/bnmonitor.html","id":null,"dir":"Reference","previous_headings":"","what":"bnmonitor: A package for sensitivity analysis and robustness in Bayesian networks — bnmonitor","title":"bnmonitor: A package for sensitivity analysis and robustness in Bayesian networks — bnmonitor","text":"Sensitivity robustness analysis Bayesian networks.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/bnmonitor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"bnmonitor: A package for sensitivity analysis and robustness in Bayesian networks — bnmonitor","text":"bnmonitor provides functions perform sensitivity analysis discrete Bayesian networks (DBNs) Gaussian Bayesian networks (GBNs). discrete case, provides three categories functions: co-variation schemes, dissimilarity measures sensitivity related functions. continuous case, standard model-preserving methods available perturbation mean vector co-variance matrix. bnmonitor provides function perform robustness studies DBNs verify well network fits specific dataset.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/bnmonitor.html","id":"dbns-robustness","dir":"Reference","previous_headings":"","what":"DBNs - Robustness","title":"bnmonitor: A package for sensitivity analysis and robustness in Bayesian networks — bnmonitor","text":"available functions robustness : Node monitors (node_monitor): contribution vertex overall log-likelihood model. Observation's influence (influential_obs): difference log-likelihood model learnt full dataset one observation. Final node monitors (node_monitor): marginal conditional node monitors assess fit vertex distribution full dataset. Sequential node monitors (seq_node_monitor): marginal conditional node monitors specific vertex using sequentially subsets dataset. Sequential parent-child monitor (seq_pa_ch_monitor): parent-child node monitor specific vertex specific configuration parents using sequentially subsets dataset.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/bnmonitor.html","id":"dbns-co-variation-schemes","dir":"Reference","previous_headings":"","what":"DBNs - Co-variation schemes","title":"bnmonitor: A package for sensitivity analysis and robustness in Bayesian networks — bnmonitor","text":"available co-variation schemes : Uniform co-variation scheme (uniform_covar): distributes probability mass co-varied uniformly among co-varying parameters. Proportional co-variation scheme (proportional_covar): distributes probability mass co-varied proportion original Bayesian network. Order-preserving co-variation scheme (orderp_covar):distributes co-varied probability mass among co-varying parameters original order parameters preserved.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/bnmonitor.html","id":"dbns-dissimilarity-measures","dir":"Reference","previous_headings":"","what":"DBNs - Dissimilarity measures","title":"bnmonitor: A package for sensitivity analysis and robustness in Bayesian networks — bnmonitor","text":"dissimilarity measures quantify difference Bayesian network update parameter variation. available dissimilarity measures : Chan-Darwiche distance (CD) Kullback-Leibler divergence (KL)","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/bnmonitor.html","id":"dbns-sensitivity-functions","dir":"Reference","previous_headings":"","what":"DBNs - Sensitivity functions","title":"bnmonitor: A package for sensitivity analysis and robustness in Bayesian networks — bnmonitor","text":"available functions sensitivity analysis : Sensitivity function (sensitivity): returns certain probability interest given parameter change. Evidence can considered. Sensitivity query (sensquery): returns parameter changes needed get certain probability interest. Evidence can considered.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/bnmonitor.html","id":"gbns-model-preserving-matrices","dir":"Reference","previous_headings":"","what":"GBNs - Model-Preserving matrices","title":"bnmonitor: A package for sensitivity analysis and robustness in Bayesian networks — bnmonitor","text":"available functions construct model-preserving co-variation matrices : Total co-variation matrix (total_covar_matrix). Partial co-variation matrix (partial_covar_matrix). Row-based co-variation matrix (row_covar_matrix). Column-based co-variation matrix (col_covar_matrix).","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/bnmonitor.html","id":"gbns-mean-and-covariance-variations","dir":"Reference","previous_headings":"","what":"GBNs - Mean and Covariance variations","title":"bnmonitor: A package for sensitivity analysis and robustness in Bayesian networks — bnmonitor","text":"available functions perturb distribution GBN : Mean variations (mean_var). Standard covariance variations (covariance_var). Model-preserving covariance variations (model_pres_cov).","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/bnmonitor.html","id":"gbns-dissimilarity-measures","dir":"Reference","previous_headings":"","what":"GBNs - Dissimilarity measures","title":"bnmonitor: A package for sensitivity analysis and robustness in Bayesian networks — bnmonitor","text":"available dissimilarity measures : Frobenius norm (Fro). Jeffrey's distance (Jeffreys). Kullback-Leibler divergence (KL). Upper bound KL divergence (KL_bounds).","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/cachexia.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian networks for a cachexia study — cachexia","title":"Bayesian networks for a cachexia study — cachexia","text":"Continuous Bayesian networks comparing dependence metabolomics people suffer suffer Cachexia","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/cachexia.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian networks for a cachexia study — cachexia","text":"","code":"cachexia_gbn  cachexia_ci  control_gbn  control_ci  cachexia_data"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/cachexia.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Bayesian networks for a cachexia study — cachexia","text":"Continuous Bayesian networks six metabolomics: Adipate (), Betaine (B), Fumarate (F), Glucose (GC), Glutamine (GM) Valine (V).     networks cachexia_gbn cachexia_ci people suffering cachexia class GBN CI respectively.     networks control_gbn control_ci people suffering cachexia class GBN CI respectively.     original dataset stored cachexia_data. object class CI length 4. object class GBN length 3. object class CI length 4. object class data.table (inherits data.frame) 77 rows 7 columns.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/cachexia.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Bayesian networks for a cachexia study — cachexia","text":"C. Görgen & M. Leonelli (2020), Model-preserving sensitivity analysis families Gaussian distributions.  Journal Machine Learning Research, 21: 1-32. NULL","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/chds.html","id":null,"dir":"Reference","previous_headings":"","what":"Christchurch Health and Development Study — chds","title":"Christchurch Health and Development Study — chds","text":"Simulated data Bayesian networks Christchurch Health Development Study","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/chds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Christchurch Health and Development Study — chds","text":"","code":"chds  chds_bn  chds_bn.fit"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/chds.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Christchurch Health and Development Study — chds","text":"dataframe chds includes 500 observations randomly simulated bn.fit object chds_bn.fit. four variables: Social: family's social background levels \"High\" \"Low\" Economic: family's economic status levels \"High\" \"Low\" Events: number family life events levels \"High\", \"Average\" \"Low\" Admission: hospital admission child levels \"yes\" \"\" statistics: mark 100 statistics chds_bn object class bn including MAP Bayesian network Barclay et al. (2013) chds_bn.fit object class bn.fit including probabilities article. object class data.frame 500 rows 4 columns. object class bn length 3. object class bn.fit (inherits bn.fit.dnet) length 4.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/chds.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Christchurch Health and Development Study — chds","text":"Fergusson, D. M., Horwood, L. J., & Shannon, F. T. (1986). Social family factors childhood hospital admission. Journal Epidemiology & Community Health, 40(1), 50-58. Barclay, L. M., Hutton, J. L., & Smith, J. Q. (2013). Refining Bayesian network using chain event graph. International Journal Approximate Reasoning, 54(9), 1300-1309.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/covariance_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard variation of the covariance matrix — covariance_var","title":"Standard variation of the covariance matrix — covariance_var","text":"Computation updated GBN object variation covariance matrix.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/covariance_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard variation of the covariance matrix — covariance_var","text":"","code":"covariance_var(gbn, entry, delta)"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/covariance_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standard variation of the covariance matrix — covariance_var","text":"gbn object class GBN. entry vector length 2 specifying entry covariance matrix vary. delta additive variation coefficient entry co-variation matrix given entry.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/covariance_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standard variation of the covariance matrix — covariance_var","text":"resulting covariance positive semi-definite, covariance_var returns object class GBN updated covariance matrix. Otherwise returns object class npsd.gbn, components GBN also warning entry specifying covariance matrix positive semi-definite.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/covariance_var.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Standard variation of the covariance matrix — covariance_var","text":"Let original Bayesian network Normal distribution \\(\\mathcal{N}(\\mu,\\Sigma)\\) let entry equal \\((,j)\\). variation covariance matrix amount \\(\\delta\\), variation matrix \\(D\\) constructed $$D_{k,l}=\\left\\{ \\begin{array}{ll} \\delta & \\mbox{} k=, l=j\\\\ \\delta & \\mbox{} l=, k=j \\\\ 0 & \\mbox{otherwise} \\end{array} \\right.$$ resulting distribution variation \\(\\mathcal{N}(\\mu,\\Sigma +D)\\), assuming \\(\\Sigma+ D\\) positive semi-definite.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/covariance_var.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Standard variation of the covariance matrix — covariance_var","text":"Gómez-Villegas, M. ., Maín, P., & Susi, R. (2007). Sensitivity analysis Gaussian Bayesian networks using divergence measure. Communications Statistics—Theory Methods, 36(3), 523-539. Gómez-Villegas, M. ., Main, P., & Susi, R. (2013). effect block parameter perturbations Gaussian Bayesian networks: Sensitivity robustness. Information Sciences, 222, 439-458.","code":""},{"path":[]},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/covariance_var.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standard variation of the covariance matrix — covariance_var","text":"","code":"covariance_var(synthetic_gbn,c(1,1),3) #> $order #> [1] \"y1\" \"y2\" \"y3\" \"y4\" #>  #> $mean #>      [,1] #> [1,]    0 #> [2,]    0 #> [3,]    0 #> [4,]    0 #>  #> $covariance #>      [,1] [,2] [,3] [,4] #> [1,]    4    2    2    7 #> [2,]    2    5    5   17 #> [3,]    2    5    6   19 #> [4,]    7   17   19   63 #>  #> attr(,\"class\") #> [1] \"GBN\" covariance_var(synthetic_gbn,c(1,2),-0.4) #> $order #> [1] \"y1\" \"y2\" \"y3\" \"y4\" #>  #> $mean #>      [,1] #> [1,]    0 #> [2,]    0 #> [3,]    0 #> [4,]    0 #>  #> $covariance #>      [,1] [,2] [,3] [,4] #> [1,]  1.0  1.6    2    7 #> [2,]  1.6  5.0    5   17 #> [3,]  2.0  5.0    6   19 #> [4,]  7.0 17.0   19   63 #>  #> $warning #> [1] \"The covariance is not positive semidefinite\" #>  #> attr(,\"class\") #> [1] \"npsd.gbn\""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/covariation.html","id":null,"dir":"Reference","previous_headings":"","what":"Co-variation schemes — covariation","title":"Co-variation schemes — covariation","text":"Functions return updated Bayesian network using proportional, uniform order-preserving co-variation schemes.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/covariation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Co-variation schemes — covariation","text":"","code":"proportional_covar(bnfit, node, value_node, value_parents, new_value)  orderp_covar(bnfit, node, value_node, value_parents, new_value)  uniform_covar(bnfit, node, value_node, value_parents, new_value)"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/covariation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Co-variation schemes — covariation","text":"bnfit object class bn.fit. node character string. Node conditional probability distribution changed. value_node character string. Level node. value_parents character string. Levels node's parents. levels defined according order parents bnfit[[node]][[\"parents\"]]. node parents, set NULL. new_value numeric value 0 1. Value parameter updated.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/covariation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Co-variation schemes — covariation","text":"object class bn.fit updated probabilities.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/covariation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Co-variation schemes — covariation","text":"Bayesian network parameter variation conducted expressed bn.fit object. name node varied, level parent's levels specified. parameter variation specified function : P ( node = value_node | parents = value_parents ) = new_value orderp_covar, two parameters distribution value, order given one respective conditional probability table. Furthermore, parameter associated largest probability conditional probability law varied.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/covariation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Co-variation schemes — covariation","text":"Laskey, K. B. (1995). Sensitivity analysis probability assessments Bayesian networks. IEEE Transactions Systems, Man, Cybernetics, 25(6), 901-909. Renooij, S. (2014). Co-variation sensitivity analysis Bayesian networks: Properties, consequences alternatives. International journal approximate reasoning, 55(4), 1022-1042. Leonelli, M., & Riccomagno, E. (2018). geometric characterisation sensitivity analysis monomial models. arXiv preprint arXiv:1901.02058.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/covariation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Co-variation schemes — covariation","text":"","code":"proportional_covar(synthetic_bn, \"y3\", \"2\", c(\"2\",\"1\"), 0.3) #>  #>   Bayesian network parameters #>  #>   Parameters of node y1 (multinomial distribution) #>  #> Conditional probability table: #>   #>   1   2   3  #> 0.2 0.3 0.5  #>  #>   Parameters of node y2 (multinomial distribution) #>  #> Conditional probability table: #>   #>    y1 #> y2    1   2   3 #>   1 0.2 0.3 0.7 #>   2 0.3 0.3 0.2 #>   3 0.5 0.4 0.1 #>  #>   Parameters of node y3 (multinomial distribution) #>  #> Conditional probability table: #>   #> , , y2 = 1 #>  #>    y1 #> y3    1   2   3 #>   1 0.1 0.1 0.2 #>   2 0.2 0.3 0.3 #>   3 0.7 0.6 0.5 #>  #> , , y2 = 2 #>  #>    y1 #> y3    1   2   3 #>   1 0.1 0.3 0.3 #>   2 0.4 0.6 0.5 #>   3 0.5 0.1 0.2 #>  #> , , y2 = 3 #>  #>    y1 #> y3    1   2   3 #>   1 0.8 0.7 0.4 #>   2 0.1 0.2 0.5 #>   3 0.1 0.1 0.1 #>  #>  uniform_covar(synthetic_bn, \"y2\", \"1\", \"2\", 0.3) #>  #>   Bayesian network parameters #>  #>   Parameters of node y1 (multinomial distribution) #>  #> Conditional probability table: #>   #>   1   2   3  #> 0.2 0.3 0.5  #>  #>   Parameters of node y2 (multinomial distribution) #>  #> Conditional probability table: #>   #>    y1 #> y2     1    2    3 #>   1 0.20 0.30 0.70 #>   2 0.30 0.35 0.20 #>   3 0.50 0.35 0.10 #>  #>   Parameters of node y3 (multinomial distribution) #>  #> Conditional probability table: #>   #> , , y2 = 1 #>  #>    y1 #> y3    1   2   3 #>   1 0.1 0.1 0.2 #>   2 0.2 0.3 0.3 #>   3 0.7 0.6 0.5 #>  #> , , y2 = 2 #>  #>    y1 #> y3    1   2   3 #>   1 0.1 0.3 0.3 #>   2 0.4 0.6 0.5 #>   3 0.5 0.1 0.2 #>  #> , , y2 = 3 #>  #>    y1 #> y3    1   2   3 #>   1 0.8 0.7 0.4 #>   2 0.1 0.2 0.5 #>   3 0.1 0.1 0.1 #>  #>  orderp_covar(synthetic_bn, \"y1\", \"1\", NULL, 0.3) #>  #>   Bayesian network parameters #>  #>   Parameters of node y1 (multinomial distribution) #>  #> Conditional probability table: #>   #>     1     2     3  #> 0.300 0.325 0.375  #>  #>   Parameters of node y2 (multinomial distribution) #>  #> Conditional probability table: #>   #>    y1 #> y2    1   2   3 #>   1 0.2 0.3 0.7 #>   2 0.3 0.3 0.2 #>   3 0.5 0.4 0.1 #>  #>   Parameters of node y3 (multinomial distribution) #>  #> Conditional probability table: #>   #> , , y2 = 1 #>  #>    y1 #> y3    1   2   3 #>   1 0.1 0.1 0.2 #>   2 0.2 0.3 0.3 #>   3 0.7 0.6 0.5 #>  #> , , y2 = 2 #>  #>    y1 #> y3    1   2   3 #>   1 0.1 0.3 0.3 #>   2 0.4 0.6 0.5 #>   3 0.5 0.1 0.2 #>  #> , , y2 = 3 #>  #>    y1 #> y3    1   2   3 #>   1 0.8 0.7 0.4 #>   2 0.1 0.2 0.5 #>   3 0.1 0.1 0.1 #>  #>"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/covariation_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Co-variation matrices — covariation_matrix","title":"Co-variation matrices — covariation_matrix","text":"Construction model-preserving co-variation matrices objects class CI.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/covariation_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Co-variation matrices — covariation_matrix","text":"","code":"total_covar_matrix(ci, entry, delta)  col_covar_matrix(ci, entry, delta)  partial_covar_matrix(ci, entry, delta)  row_covar_matrix(ci, entry, delta)"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/covariation_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Co-variation matrices — covariation_matrix","text":"ci object class CI. entry vector length two specifying entry covariance matrix vary. delta multiplicative variation coefficient entry covariance matrix given entry.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/covariation_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Co-variation matrices — covariation_matrix","text":"co-variation matrix size covariance matrix CI.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/covariation_matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Co-variation matrices — covariation_matrix","text":"Functions compute total, partial, row-based column-based co-variation matrices ensure conditional independences original Bayesian network hold variation. co-variation required model-preservation functions return matrix filled ones (co-variation).","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/covariation_matrix.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Co-variation matrices — covariation_matrix","text":"C. Görgen & M. Leonelli (2020), Model-preserving sensitivity analysis families Gaussian distributions.  Journal Machine Learning Research, 21: 1-32.","code":""},{"path":[]},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/covariation_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Co-variation matrices — covariation_matrix","text":"","code":"total_covar_matrix(synthetic_ci,c(1,1),0.3) #>      [,1] [,2] [,3] [,4] #> [1,]    1    1    1    1 #> [2,]    1    1    1    1 #> [3,]    1    1    1    1 #> [4,]    1    1    1    1 total_covar_matrix(synthetic_ci,c(1,2),0.3) #>      [,1] [,2] [,3] [,4] #> [1,]  0.3  1.0  0.3  0.3 #> [2,]  1.0  0.3  0.3  0.3 #> [3,]  0.3  0.3  0.3  0.3 #> [4,]  0.3  0.3  0.3  0.3 partial_covar_matrix(synthetic_ci,c(1,2),0.3) #>      [,1] [,2] [,3] [,4] #> [1,]  1.0  1.0  0.3    1 #> [2,]  1.0  0.3  0.3    1 #> [3,]  0.3  0.3  1.0    1 #> [4,]  1.0  1.0  1.0    1 row_covar_matrix(synthetic_ci,c(1,2),0.3) #>      [,1] [,2] [,3] [,4] #> [1,]    1  1.0    1    1 #> [2,]    1  0.3    1    1 #> [3,]    1  1.0    1    1 #> [4,]    1  1.0    1    1 col_covar_matrix(synthetic_ci,c(1,2),0.3) #>      [,1] [,2] [,3] [,4] #> [1,]  1.0    1  0.3    1 #> [2,]  1.0    1  1.0    1 #> [3,]  0.3    1  1.0    1 #> [4,]  1.0    1  1.0    1"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/diabetes.html","id":null,"dir":"Reference","previous_headings":"","what":"Pima Indian Diabetes Data — diabetes","title":"Pima Indian Diabetes Data — diabetes","text":"Discretized version widely-used Pima Indians Diabetes Database","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/diabetes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pima Indian Diabetes Data — diabetes","text":"dataframe 392 observations following 9 binary variables: PREG: number times pregnant (low/high) GLUC: plasma glucose concentration (low/high) PRES: diastolic blood pressure (low/high) TRIC: triceps skin fold thickness (low/high) INS: 2-hour serum insulin (low/high) MASS: body mass index (low/high) PED: diabetes pedigree function (low/high) AGE: age (low/high) DIAB: test diabetes (neg/pos)","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/diabetes.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Pima Indian Diabetes Data — diabetes","text":"data taken UCI Repository Machine Learning Databases. chose dataset best showcases function monitors. However, acknowledge data used without consent compensation original Akimel O'odham participants.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/final_node_monitor.html","id":null,"dir":"Reference","previous_headings":"","what":"Final node monitors — final_node_monitor","title":"Final node monitors — final_node_monitor","text":"Marginal conditional node monitors last observation data vertices Bayesian network using full dataset","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/final_node_monitor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Final node monitors — final_node_monitor","text":"","code":"final_node_monitor(dag, df)"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/final_node_monitor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Final node monitors — final_node_monitor","text":"dag object class bn bnlearn package df base R style dataframe","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/final_node_monitor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Final node monitors — final_node_monitor","text":"dataframe including names vertices, marginal node monitors conditional node monitors. also return two plots vertices darker color higher marginal z-score conditional z-score, respectively, absolute value.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/final_node_monitor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Final node monitors — final_node_monitor","text":"Consider Bayesian network variables \\(Y_1,\\dots,Y_m\\) suppose dataset \\((\\boldsymbol{y}_1,\\dots,\\boldsymbol{y}_n)\\) observed, \\(\\boldsymbol{y}_i=(y_{i1},\\dots,y_{im})\\) \\(y_{ij}\\) -th observation j-th variable. Let \\(p_n\\) denote marginal density \\(Y_j\\) first \\(n-1\\) observations processed. Define $$E_n = \\sum_{k=1}^Kp_n(d_k)\\log(p_n(d_k)),$$ $$V_n = \\sum_{k=1}^K p_n(d_k)\\log^2(p_n(d_k))-E_n^2,$$ \\((d_1,\\dots,d_K)\\) possible values \\(Y_j\\). marginal node monitor vertex \\(Y_j\\) defined $$Z_j=\\frac{-\\log(p_n(y_{ij}))- E_n}{\\sqrt{V_n}}.$$ Higher values \\(Z_j\\) can give indication poor model fit vertex \\(Y_j\\). conditional node monitor vertex \\(Y_j\\) defined  $$Z_j=\\frac{-\\log(p_n(y_{nj}|y_{n1},\\dots,y_{n(j-1)},y_{n(j+1)},\\dots,y_{nm}))- E_n}{\\sqrt{V_n}},$$  \\(E_n\\) \\(V_n\\) computed respect \\(p_n(y_{nj}|y_{n1},\\dots,y_{n(j-1)},y_{n(j+1)},\\dots,y_{nm})\\). , higher values \\(Z_j\\) can give indication poor model fit vertex \\(Y_j\\).","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/final_node_monitor.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Final node monitors — final_node_monitor","text":"Cowell, R. G., Dawid, P., Lauritzen, S. L., & Spiegelhalter, D. J. (2006). Probabilistic networks expert systems: Exact computational methods Bayesian networks. Springer Science & Business Media. Cowell, R. G., Verrall, R. J., & Yoon, Y. K. (2007). Modeling operational risk Bayesian networks. Journal Risk Insurance, 74(4), 795-827.","code":""},{"path":[]},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/final_node_monitor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Final node monitors — final_node_monitor","text":"","code":"final_node_monitor(chds_bn, chds[1:100,]) #>        node marg.z.score cond.z.score #> 1    Social  -16.6593687  -22.1989096 #> 2  Economic   -0.9613513   -0.8493873 #> 3    Events   -3.7226491   -3.4009457 #> 4 Admission   -0.5790764   -0.5844012"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/fire_alarm.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian network on fire alarm system — fire_alarm","title":"Bayesian network on fire alarm system — fire_alarm","text":"fire_alarm bn.fit object including Bayesian network fire alarm system.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/fire_alarm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian network on fire alarm system — fire_alarm","text":"","code":"fire_alarm"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/fire_alarm.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Bayesian network on fire alarm system — fire_alarm","text":"Bayesian network fire_alarm includes following nodes: Fire: two-level factor levels TRUE FALSE. indicates presence absence fire. Smoke: two level-factor levels TRUE FALSE. indicates presence absence smoke. Alarm: three level-factor levels TRUE, MALFUNCTION FALSE. indicates alarm ringing, malfunctioning ringing. Tampering: two level-factor levels TRUE FALSE. indicates alarm system tampered . Leaving: two level-factor levels TRUE FALSE. indicates building evacuated . Report: two level-factor levels TRUE FALSE. indicates incident reported .","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/fire_alarm.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Bayesian network on fire alarm system — fire_alarm","text":"Hei Chan, Adnan Darwiche (2002). \"numbers really matter?\". Journal Artificial Intelligence Research 17 (265-287).","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/global_monitor.html","id":null,"dir":"Reference","previous_headings":"","what":"Global monitor — global_monitor","title":"Global monitor — global_monitor","text":"Negative marginal log-likelihood model","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/global_monitor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global monitor — global_monitor","text":"","code":"global_monitor(dag, df, alpha = \"default\")"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/global_monitor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Global monitor — global_monitor","text":"dag object class bn bnlearn package df base R style dataframe alpha single integer. default, number max levels df","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/global_monitor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Global monitor — global_monitor","text":"numerical value","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/global_monitor.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Global monitor — global_monitor","text":"Cowell, R. G., Dawid, P., Lauritzen, S. L., & Spiegelhalter, D. J. (2006). Probabilistic networks expert systems: Exact computational methods Bayesian networks. Springer Science & Business Media. Cowell, R. G., Verrall, R. J., & Yoon, Y. K. (2007). Modeling operational risk Bayesian networks. Journal Risk Insurance, 74(4), 795-827.","code":""},{"path":[]},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/global_monitor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Global monitor — global_monitor","text":"","code":"global_monitor(chds_bn, chds, 3) #> [1] 1409.985"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/influential_obs.html","id":null,"dir":"Reference","previous_headings":"","what":"Influential observations — influential_obs","title":"Influential observations — influential_obs","text":"Influence single observation global monitor","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/influential_obs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Influential observations — influential_obs","text":"","code":"influential_obs(dag, data, alpha = \"default\")"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/influential_obs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Influential observations — influential_obs","text":"dag object class bn bnlearn package data base R style dataframe alpha single integer. default, number max levels data","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/influential_obs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Influential observations — influential_obs","text":"vector including influence observation.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/influential_obs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Influential observations — influential_obs","text":"Consider Bayesian network variables \\(Y_1,\\dots,Y_m\\) suppose dataset \\((\\boldsymbol{y}_1,\\dots,\\boldsymbol{y}_n)\\) observed, \\(\\boldsymbol{y}_i=(y_{i1},\\dots,y_{im})\\) \\(y_{ij}\\) -th observation j-th variable. Define \\(\\boldsymbol{y}_{-}=(\\boldsymbol{y}_1,\\dots,\\boldsymbol{y}_{-1},\\boldsymbol{y}_{+1},\\dots,\\boldsymbol{y}_n)\\). influence observation global monitor defined $$|\\log(p(\\boldsymbol{y}_1,\\dots,\\boldsymbol{y}_n)) - \\log(p(\\boldsymbol{y}_{-}))|.$$ High values index denote observations highly contribute likelihood model.","code":""},{"path":[]},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/influential_obs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Influential observations — influential_obs","text":"","code":"influential_obs(chds_bn, chds[1:100,], 3) #>    Social Economic  Events Admission    score #> 1    High      Low     Low        No 2.109706 #> 2    High      Low     Low       Yes 3.914204 #> 4    High     High    High        No 3.350580 #> 5     Low      Low    High        No 1.993258 #> 7     Low      Low     Low        No 2.628451 #> 8     Low      Low Average        No 2.061860 #> 15   High     High     Low        No 1.816719 #> 22   High     High     Low       Yes 3.621217 #> 23   High      Low Average       Yes 4.302875 #> 26    Low      Low     Low       Yes 4.432949 #> 34   High     High Average        No 3.062507 #> 35    Low      Low    High       Yes 3.445511 #> 40    Low     High     Low       Yes 6.545914 #> 45   High      Low Average        No 3.355494 #> 46    Low     High     Low        No 4.741415 #> 52   High      Low    High        No 3.643567 #> 59    Low      Low Average       Yes 3.009242 #> 69   High     High Average       Yes 4.009888 #> 73    Low     High    High        No 4.106223 #> 83   High      Low    High       Yes 5.095819 #> 85   High     High    High       Yes 4.802832"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/mathmarks.html","id":null,"dir":"Reference","previous_headings":"","what":"Math Marks Data — mathmarks","title":"Math Marks Data — mathmarks","text":"Marks 100 88 students taking examinations mechanics (C), vectors (C), algebra (0), analysis (O) statistics (O), C indicates closed O indicates open book examination.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/mathmarks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Math Marks Data — mathmarks","text":"","code":"data(mathmarks)"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/mathmarks.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Math Marks Data — mathmarks","text":"dataframe 88 observations following 5 variables mechanics: mark 100 mechanics vectors: mark 100 vectors algebra: mark 100 algebra analysis: mark 100 analysis statistics: mark 100 statistics","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/mathmarks.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Math Marks Data — mathmarks","text":"Mardia, K. V., Kent, J. T. Bibby, J. M. (1979) Multivariate Analysis. London: Academic Press.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/mean_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard variation of the mean vector — mean_var","title":"Standard variation of the mean vector — mean_var","text":"Computation updated GBN object variation mean vector.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/mean_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard variation of the mean vector — mean_var","text":"","code":"mean_var(gbn, entry, delta)"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/mean_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standard variation of the mean vector — mean_var","text":"gbn object class GBN. entry index specifying entry mean vector vary. delta additive variation coefficient entry mean vector given entry.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/mean_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standard variation of the mean vector — mean_var","text":"object class GBN updated mean vector.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/mean_var.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Standard variation of the mean vector — mean_var","text":"Let original Bayesian network Normal distribution \\(\\mathcal{N}(\\mu,\\Sigma)\\) let entry equal \\(\\). Let \\(\\mu_i\\) -th entry \\(\\mu\\). variation mean  amount \\(\\delta\\) resulting distribution \\(\\mathcal{N}(\\mu',\\Sigma)\\), \\(\\mu'\\) equal \\(\\mu\\) except -th entry equal \\(\\mu+\\delta\\).","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/mean_var.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Standard variation of the mean vector — mean_var","text":"Gómez-Villegas, M. ., Maín, P., & Susi, R. (2007). Sensitivity analysis Gaussian Bayesian networks using divergence measure. Communications Statistics—Theory Methods, 36(3), 523-539. Gómez-Villegas, M. ., Main, P., & Susi, R. (2013). effect block parameter perturbations Gaussian Bayesian networks: Sensitivity robustness. Information Sciences, 222, 439-458.","code":""},{"path":[]},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/mean_var.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standard variation of the mean vector — mean_var","text":"","code":"mean_var(synthetic_gbn,2,3) #> $order #> [1] \"y1\" \"y2\" \"y3\" \"y4\" #>  #> $mean #>      [,1] #> [1,]    0 #> [2,]    3 #> [3,]    0 #> [4,]    0 #>  #> $covariance #>      [,1] [,2] [,3] [,4] #> [1,]    1    2    2    7 #> [2,]    2    5    5   17 #> [3,]    2    5    6   19 #> [4,]    7   17   19   63 #>  #> attr(,\"class\") #> [1] \"GBN\""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/model_pres_cov.html","id":null,"dir":"Reference","previous_headings":"","what":"Model-Preserving co-variation — model_pres_cov","title":"Model-Preserving co-variation — model_pres_cov","text":"Model-preserving co-variation objects class CI.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/model_pres_cov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model-Preserving co-variation — model_pres_cov","text":"","code":"model_pres_cov(ci, type, entry, delta)"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/model_pres_cov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model-Preserving co-variation — model_pres_cov","text":"ci object class CI. type character string. Type model-preserving co-variation: either \"total\", \"partial\", row column. entry vector length two specifying entry covariance matrix vary. delta multiplicative variation coefficient entry covariance matrix given entry.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/model_pres_cov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model-Preserving co-variation — model_pres_cov","text":"resulting covariance positive semi-definite, model_pres_cov returns object class CI updated covariance matrix. Otherwise returns object class npsd.ci, components CI also warning entry specifying covariance matrix positive semi-definite.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/model_pres_cov.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Model-Preserving co-variation — model_pres_cov","text":"Let original Bayesian network Normal distribution \\(\\mathcal{N}(\\mu,\\Sigma)\\) let entry equal \\((,j)\\). multiplicative variation covariance matrix amount \\(\\delta\\), variation matrix \\(\\Delta\\) constructed $$\\Delta_{k,l}=\\left\\{ \\begin{array}{ll} \\delta & \\mbox{} k=, l=j\\\\ \\delta & \\mbox{} l=, k=j \\\\ 0 & \\mbox{otherwise} \\end{array} \\right.$$ co-variation matrix \\(\\tilde\\Delta\\) constructed resulting distribution variation \\(\\mathcal{N}(\\mu,\\tilde\\Delta\\circ\\Delta\\circ\\Sigma)\\), assuming \\(\\tilde\\Delta\\circ\\Delta\\circ\\Sigma\\) positive semi-definite \\(\\circ\\) denotes Schur (element-wise) product. matrix \\(\\tilde\\Delta\\) constructed ensure conditional independence original Bayesian networks retained parameter variation.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/model_pres_cov.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Model-Preserving co-variation — model_pres_cov","text":"C. Görgen & M. Leonelli (2020), Model-preserving sensitivity analysis families Gaussian distributions.  Journal Machine Learning Research, 21: 1-32.","code":""},{"path":[]},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/model_pres_cov.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model-Preserving co-variation — model_pres_cov","text":"","code":"model_pres_cov(synthetic_ci,\"partial\",c(1,3),1.1) #> $order #> [1] \"y1\" \"y2\" \"y3\" \"y4\" #>  #> $mean #>      [,1] #> [1,]    0 #> [2,]    0 #> [3,]    0 #> [4,]    0 #>  #> $covariance #>      [,1] [,2] [,3] [,4] #> [1,]  1.0  2.2  2.2    7 #> [2,]  2.2  5.5  5.5   17 #> [3,]  2.2  5.5  6.0   19 #> [4,]  7.0 17.0 19.0   63 #>  #> $cond_ind #> $cond_ind[[1]] #> $cond_ind[[1]]$A #> [1] \"y2\" #>  #> $cond_ind[[1]]$B #> character(0) #>  #> $cond_ind[[1]]$C #> [1] \"y1\" #>  #>  #> $cond_ind[[2]] #> $cond_ind[[2]]$A #> [1] \"y3\" #>  #> $cond_ind[[2]]$B #> [1] \"y1\" #>  #> $cond_ind[[2]]$C #> [1] \"y2\" #>  #>  #> $cond_ind[[3]] #> $cond_ind[[3]]$A #> [1] \"y4\" #>  #> $cond_ind[[3]]$B #> character(0) #>  #> $cond_ind[[3]]$C #> [1] \"y1\" \"y2\" \"y3\" #>  #>  #>  #> attr(,\"class\") #> [1] \"CI\" model_pres_cov(synthetic_ci,\"partial\",c(1,3),0.9) #> $order #> [1] \"y1\" \"y2\" \"y3\" \"y4\" #>  #> $mean #>      [,1] #> [1,]    0 #> [2,]    0 #> [3,]    0 #> [4,]    0 #>  #> $covariance #>      [,1] [,2] [,3] [,4] #> [1,]  1.0  1.8  1.8    7 #> [2,]  1.8  4.5  4.5   17 #> [3,]  1.8  4.5  6.0   19 #> [4,]  7.0 17.0 19.0   63 #>  #> $cond_ind #> $cond_ind[[1]] #> $cond_ind[[1]]$A #> [1] \"y2\" #>  #> $cond_ind[[1]]$B #> character(0) #>  #> $cond_ind[[1]]$C #> [1] \"y1\" #>  #>  #> $cond_ind[[2]] #> $cond_ind[[2]]$A #> [1] \"y3\" #>  #> $cond_ind[[2]]$B #> [1] \"y1\" #>  #> $cond_ind[[2]]$C #> [1] \"y2\" #>  #>  #> $cond_ind[[3]] #> $cond_ind[[3]]$A #> [1] \"y4\" #>  #> $cond_ind[[3]]$B #> character(0) #>  #> $cond_ind[[3]]$C #> [1] \"y1\" \"y2\" \"y3\" #>  #>  #>  #> $warning #> [1] \"The covariance is not positive semidefinite\" #>  #> attr(,\"class\") #> [1] \"npsd.ci\" model_pres_cov(synthetic_ci,\"total\",c(1,2),0.5) #> $order #> [1] \"y1\" \"y2\" \"y3\" \"y4\" #>  #> $mean #>      [,1] #> [1,]    0 #> [2,]    0 #> [3,]    0 #> [4,]    0 #>  #> $covariance #>      [,1] [,2] [,3] [,4] #> [1,]  0.5  1.0  1.0  3.5 #> [2,]  1.0  2.5  2.5  8.5 #> [3,]  1.0  2.5  3.0  9.5 #> [4,]  3.5  8.5  9.5 31.5 #>  #> $cond_ind #> $cond_ind[[1]] #> $cond_ind[[1]]$A #> [1] \"y2\" #>  #> $cond_ind[[1]]$B #> character(0) #>  #> $cond_ind[[1]]$C #> [1] \"y1\" #>  #>  #> $cond_ind[[2]] #> $cond_ind[[2]]$A #> [1] \"y3\" #>  #> $cond_ind[[2]]$B #> [1] \"y1\" #>  #> $cond_ind[[2]]$C #> [1] \"y2\" #>  #>  #> $cond_ind[[3]] #> $cond_ind[[3]]$A #> [1] \"y4\" #>  #> $cond_ind[[3]]$B #> character(0) #>  #> $cond_ind[[3]]$C #> [1] \"y1\" \"y2\" \"y3\" #>  #>  #>  #> attr(,\"class\") #> [1] \"CI\" model_pres_cov(synthetic_ci,\"row\",c(1,3),0.98) #> $order #> [1] \"y1\" \"y2\" \"y3\" \"y4\" #>  #> $mean #>      [,1] #> [1,]    0 #> [2,]    0 #> [3,]    0 #> [4,]    0 #>  #> $covariance #>      [,1] [,2]  [,3] [,4] #> [1,] 1.00  2.0  1.96    7 #> [2,] 2.00  5.0  4.90   17 #> [3,] 1.96  4.9  6.00   19 #> [4,] 7.00 17.0 19.00   63 #>  #> $cond_ind #> $cond_ind[[1]] #> $cond_ind[[1]]$A #> [1] \"y2\" #>  #> $cond_ind[[1]]$B #> character(0) #>  #> $cond_ind[[1]]$C #> [1] \"y1\" #>  #>  #> $cond_ind[[2]] #> $cond_ind[[2]]$A #> [1] \"y3\" #>  #> $cond_ind[[2]]$B #> [1] \"y1\" #>  #> $cond_ind[[2]]$C #> [1] \"y2\" #>  #>  #> $cond_ind[[3]] #> $cond_ind[[3]]$A #> [1] \"y4\" #>  #> $cond_ind[[3]]$B #> character(0) #>  #> $cond_ind[[3]]$C #> [1] \"y1\" \"y2\" \"y3\" #>  #>  #>  #> attr(,\"class\") #> [1] \"CI\" model_pres_cov(synthetic_ci,\"column\",c(1,3),0.98) #> $order #> [1] \"y1\" \"y2\" \"y3\" \"y4\" #>  #> $mean #>      [,1] #> [1,]    0 #> [2,]    0 #> [3,]    0 #> [4,]    0 #>  #> $covariance #>      [,1]  [,2]  [,3] [,4] #> [1,] 1.00  1.96  1.96    7 #> [2,] 1.96  5.00  5.00   17 #> [3,] 1.96  5.00  6.00   19 #> [4,] 7.00 17.00 19.00   63 #>  #> $cond_ind #> $cond_ind[[1]] #> $cond_ind[[1]]$A #> [1] \"y2\" #>  #> $cond_ind[[1]]$B #> character(0) #>  #> $cond_ind[[1]]$C #> [1] \"y1\" #>  #>  #> $cond_ind[[2]] #> $cond_ind[[2]]$A #> [1] \"y3\" #>  #> $cond_ind[[2]]$B #> [1] \"y1\" #>  #> $cond_ind[[2]]$C #> [1] \"y2\" #>  #>  #> $cond_ind[[3]] #> $cond_ind[[3]]$A #> [1] \"y4\" #>  #> $cond_ind[[3]]$B #> character(0) #>  #> $cond_ind[[3]]$C #> [1] \"y1\" \"y2\" \"y3\" #>  #>  #>  #> attr(,\"class\") #> [1] \"CI\""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/node_monitor.html","id":null,"dir":"Reference","previous_headings":"","what":"Node monitor — node_monitor","title":"Node monitor — node_monitor","text":"Contribution vertex Bayesian network global monitor","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/node_monitor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Node monitor — node_monitor","text":"","code":"node_monitor(dag, df, alpha = \"default\")"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/node_monitor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Node monitor — node_monitor","text":"dag object class bn bnlearn package df base R style dataframe alpha single integer. default, number max levels df","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/node_monitor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Node monitor — node_monitor","text":"dataframe including name vertices contribution vertices global monitor. also returns plot vertices higher contributions absolute value darker.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/node_monitor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Node monitor — node_monitor","text":"Consider Bayesian network variables \\(Y_1,\\dots,Y_m\\) suppose dataset \\((\\boldsymbol{y}_1,\\dots,\\boldsymbol{y}_n)\\) observed, \\(\\boldsymbol{y}_i=(y_{i1},\\dots,y_{im})\\) \\(y_{ij}\\) -th observation j-th variable. global monitor defined negative log-likelihood model, .e. $$-\\log(p(\\boldsymbol{y}_1,\\dots,\\boldsymbol{y}_n))= - \\sum_{j=1}^m\\sum_{=1}^n \\log(p(y_{ij} | \\pi_{ij})),$$ \\(\\pi_{ij}\\) value parents \\(Y_j\\) -th observation. contribution j-th vertex global monitor thus $$-\\sum_{=1}^n\\log(p(y_{ij}|\\pi_{ij})).$$","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/node_monitor.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Node monitor — node_monitor","text":"Cowell, R. G., Dawid, P., Lauritzen, S. L., & Spiegelhalter, D. J. (2006). Probabilistic networks expert systems: Exact computational methods Bayesian networks. Springer Science & Business Media. Cowell, R. G., Verrall, R. J., & Yoon, Y. K. (2007). Modeling operational risk Bayesian networks. Journal Risk Insurance, 74(4), 795-827.","code":""},{"path":[]},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/node_monitor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Node monitor — node_monitor","text":"","code":"node_monitor(chds_bn, chds, 3) #>      Vertex    Score #> 1    Social 343.7419 #> 2  Economic 291.3181 #> 3    Events 537.1686 #> 4 Admission 237.7562"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting methods — plot","title":"Plotting methods — plot","text":"Plotting methods outputs bnmonitor functions","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting methods — plot","text":"","code":"# S3 method for seq_marg_monitor plot(x, ...)  # S3 method for CD plot(x, ...)  # S3 method for seq_cond_monitor plot(x, ...)  # S3 method for node_monitor plot(x, ...)  # S3 method for influential_obs plot(x, ...)  # S3 method for jeffreys plot(x, ...)  # S3 method for kl plot(x, ...)  # S3 method for final_node_monitor plot(x, which, ...)  # S3 method for seq_pa_ch_monitor plot(x, ...)  # S3 method for sensitivity plot(x, ...)  # S3 method for fro plot(x, ...)"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting methods — plot","text":"x output node_monitor. ... compatibility select monitor plot, either \"marginal\" \"conditional\" (output node_monitor ).","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting methods — plot","text":"plot specific object applied .","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/print.html","id":null,"dir":"Reference","previous_headings":"","what":"Printing methods — print","title":"Printing methods — print","text":"Printing methods outputs bnmonitor functions","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/print.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Printing methods — print","text":"","code":"# S3 method for sensitivity print(x, ...)  # S3 method for kl print(x, ...)  # S3 method for CD print(x, ...)  # S3 method for fro print(x, ...)  # S3 method for node_monitor print(x, ...)  # S3 method for jeffreys print(x, ...)  # S3 method for final_node_monitor print(x, ...)  # S3 method for seq_cond_monitor print(x, ...)  # S3 method for seq_pa_ch_monitor print(x, ...)  # S3 method for seq_marg_monitor print(x, ...)"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/print.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Printing methods — print","text":"x appropriate object ... compatibility","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/print.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Printing methods — print","text":"Printing specific object applied .","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/psd_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for positive semi-definiteness after a perturbation — psd_check","title":"Check for positive semi-definiteness after a perturbation — psd_check","text":"psd_check returns boolean determine covariance matrix perturbation positive semi-definite.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/psd_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for positive semi-definiteness after a perturbation — psd_check","text":"","code":"psd_check(x, ...)  # S3 method for GBN psd_check(x, entry, delta, ...)  # S3 method for CI psd_check(x, type, entry, delta, ...)"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/psd_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for positive semi-definiteness after a perturbation — psd_check","text":"x object class GBN CI. ... additional arguments compatibility. entry vector length 2 indicating entry covariance matrix vary. delta numeric vector, including variation parameters act additively. type character string. Type model-preserving co-variation: either total, partial, row, column . , Frobenius norms computed every type co-variation matrix.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/psd_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for positive semi-definiteness after a perturbation — psd_check","text":"dataframe including variations performed check positive semi-definiteness.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/psd_check.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check for positive semi-definiteness after a perturbation — psd_check","text":"details depend class method psd_check applied . Let \\(\\Sigma\\) covariance matrix Gaussian Bayesian network let \\(D\\) perturbation matrix acting additively. perturbed covariance matrix \\(\\Sigma+D\\) positive semi-definite $$\\rho(D)\\leq \\lambda_{\\min}(\\Sigma)$$ \\(\\lambda_{\\min}\\) smallest eigenvalue end \\(\\rho\\) spectral radius.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/psd_check.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Check for positive semi-definiteness after a perturbation — psd_check","text":"GBN: psd_check objects GBN CI: psd_check objects CI","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/psd_check.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Check for positive semi-definiteness after a perturbation — psd_check","text":"C. Görgen & M. Leonelli (2020), Model-preserving sensitivity analysis families Gaussian distributions.  Journal Machine Learning Research, 21: 1-32.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/psd_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for positive semi-definiteness after a perturbation — psd_check","text":"","code":"psd_check(synthetic_gbn,c(2,4),-3) #>   Variation   PSD #> 1        -3 FALSE psd_check(synthetic_gbn,c(2,3),seq(-1,1,0.1)) #>    Variation   PSD #> 1       -1.0 FALSE #> 2       -0.9 FALSE #> 3       -0.8 FALSE #> 4       -0.7 FALSE #> 5       -0.6 FALSE #> 6       -0.5 FALSE #> 7       -0.4 FALSE #> 8       -0.3 FALSE #> 9       -0.2 FALSE #> 10      -0.1  TRUE #> 11       0.0  TRUE #> 12       0.1  TRUE #> 13       0.2 FALSE #> 14       0.3 FALSE #> 15       0.4 FALSE #> 16       0.5 FALSE #> 17       0.6 FALSE #> 18       0.7 FALSE #> 19       0.8 FALSE #> 20       0.9 FALSE #> 21       1.0 FALSE psd_check(synthetic_ci,\"partial\",c(2,4),0.95) #>   Variation psd.check #> 1      0.95     FALSE psd_check(synthetic_ci,\"all\",c(2,3),seq(0.9,1.1,0.01)) #>    Variation Total Partial Row_based Column_based #> 1       0.90  TRUE   FALSE     FALSE        FALSE #> 2       0.91  TRUE   FALSE     FALSE        FALSE #> 3       0.92  TRUE   FALSE     FALSE        FALSE #> 4       0.93  TRUE   FALSE     FALSE        FALSE #> 5       0.94  TRUE   FALSE     FALSE        FALSE #> 6       0.95  TRUE   FALSE     FALSE        FALSE #> 7       0.96  TRUE   FALSE     FALSE        FALSE #> 8       0.97  TRUE   FALSE     FALSE        FALSE #> 9       0.98  TRUE   FALSE      TRUE        FALSE #> 10      0.99  TRUE    TRUE      TRUE         TRUE #> 11      1.00  TRUE    TRUE      TRUE         TRUE #> 12      1.01  TRUE    TRUE      TRUE         TRUE #> 13      1.02  TRUE   FALSE      TRUE        FALSE #> 14      1.03  TRUE   FALSE     FALSE        FALSE #> 15      1.04  TRUE   FALSE     FALSE        FALSE #> 16      1.05  TRUE   FALSE     FALSE        FALSE #> 17      1.06  TRUE   FALSE     FALSE        FALSE #> 18      1.07  TRUE   FALSE     FALSE        FALSE #> 19      1.08  TRUE   FALSE     FALSE        FALSE #> 20      1.09  TRUE   FALSE     FALSE        FALSE #> 21      1.10  TRUE   FALSE     FALSE        FALSE"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/sensitivity.html","id":null,"dir":"Reference","previous_headings":"","what":"Sensitivity function — sensitivity","title":"Sensitivity function — sensitivity","text":"sensitivity returns sensitivity function probabilistic query interest respect parameter change defined user.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/sensitivity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sensitivity function — sensitivity","text":"","code":"sensitivity(   bnfit,   interest_node,   interest_node_value,   evidence_nodes = NULL,   evidence_states = NULL,   node,   value_node,   value_parents,   new_value,   covariation = \"proportional\" )"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/sensitivity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sensitivity function — sensitivity","text":"bnfit object class bn.fit. interest_node character string. Node probability query interest. interest_node_value character string. Level interest_node. evidence_nodes character string. Evidence nodes. NULL evidence considered. Set default NULL. evidence_states character string. Levels evidence_nodes. NULL evidence considered. evidence_nodes=\"NULL\", evidence_states set NULL. Set default NULL. node character string. Node conditional probability distribution changed. value_node character string. Level node. value_parents character string. Levels node's parents. levels defined according order parents bnfit[[node]][[\"parents\"]]. node parents, set NULL. new_value numeric vector elements 0 1. Values parameter updated. can take specific value one. one value, defined vector increasing order elements. new_value can also take value character string : case sequence possible parameter changes ranging 0.05 0.95 considered. covariation character string. Co-variation scheme used updated Bayesian network. Can take values uniform, proportional, orderp, . equal , uniform, proportional order-preserving co-variation schemes considered. Set default proportional.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/sensitivity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sensitivity function — sensitivity","text":"dataframe varied parameter values output probabilities co-variation schemes selected. plot = TRUE function also returns plot sensitivity function.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/sensitivity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sensitivity function — sensitivity","text":"Bayesian network parameter variation conducted expressed bn.fit object. name node varied, level parent's level specified. parameter variation specified function : P ( node = value_node | parents = value_parents ) = new_value probabilistic query interest : P ( interest_node = interest_node_value | evidence_nodes = evidence_states )","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/sensitivity.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sensitivity function — sensitivity","text":"Coupé, V. M., & Van Der Gaag, L. C. (2002). Properties sensitivity analysis Bayesian belief networks. Annals Mathematics Artificial Intelligence, 36(4), 323-356. Leonelli, M., Goergen, C., & Smith, J. Q. (2017). Sensitivity analysis multilinear probabilistic models. Information Sciences, 411, 84-97.","code":""},{"path":[]},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/sensquery.html","id":null,"dir":"Reference","previous_headings":"","what":"Sensitivity of probability query — sensquery","title":"Sensitivity of probability query — sensquery","text":"sensquery returns, given change probability interest, parameters' changes achieve together corresponding CD distances.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/sensquery.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sensitivity of probability query — sensquery","text":"","code":"sensquery(   bnfit,   interest_node,   interest_node_value,   new_value,   evidence_nodes = NULL,   evidence_states = NULL )"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/sensquery.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sensitivity of probability query — sensquery","text":"bnfit object class bn.fit. interest_node character string. Node probability query interest. interest_node_value character string. Level interest_node. new_value numeric value 0 1. New value probability interest. evidence_nodes character string. Evidence nodes. Set default NULL. evidence_states character string. Levels evidence_nodes. NULL evidence considered. evidence_nodes=\"NULL\", evidence_states set NULL. Set default NULL.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/sensquery.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sensitivity of probability query — sensquery","text":"dataframe following columns: node - vertex proposed change; Value node - level node changed; Value parents - levels parent variables node; Original value - original probability defined Node, Value node Value parents; Suggested change - new proposed value probability defined Node, Value node Value parents; CD distance - CD distance original new network Suggested change.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/sensquery.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sensitivity of probability query — sensquery","text":"Bayesian network expressed bn.fit object. name node probability interest, level new value specified. Evidence also indicated. probability interest specified follows: P ( interest_node = interest_node_value | evidence_nodes = evidence_states  ) = new_value  proportional co-variation scheme used.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/sensquery.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sensitivity of probability query — sensquery","text":"Chan, H., & Darwiche, . (2002). numbers really matter?. Journal artificial intelligence research, 17, 265-287.","code":""},{"path":[]},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/sensquery.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sensitivity of probability query — sensquery","text":"","code":"sensquery(synthetic_bn,\"y3\", \"3\", 0.3) #>   Node Value node Value parents Original value Suggested change CD distance #> 1   y1          2                          0.3        0.6236559    1.352393 #> 2   y2          3             1            0.5        0.9479167    2.901422 #> 3   y3          1           2,1            0.1        0.8166667    3.691150"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/seq_node_monitor.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequential node monitors — seq_node_monitor","title":"Sequential node monitors — seq_node_monitor","text":"Sequential marginal conditional node monitors vertex Bayesian network.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/seq_node_monitor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequential node monitors — seq_node_monitor","text":"","code":"seq_marg_monitor(dag, df, node.name)  seq_cond_monitor(dag, df, node.name)"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/seq_node_monitor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequential node monitors — seq_node_monitor","text":"dag object class bn bnlearn package df base R style dataframe node.name node compute monitor","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/seq_node_monitor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sequential node monitors — seq_node_monitor","text":"vector including scores \\(Z_{ij}\\), either marginal conditional.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/seq_node_monitor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sequential node monitors — seq_node_monitor","text":"Consider Bayesian network variables \\(Y_1,\\dots,Y_m\\) suppose dataset \\((\\boldsymbol{y}_1,\\dots,\\boldsymbol{y}_n)\\) observed, \\(\\boldsymbol{y}_i=(y_{i1},\\dots,y_{im})\\) \\(y_{ij}\\) -th observation j-th variable. Let \\(p_i\\) denote marginal density \\(Y_j\\) first \\(-1\\) observations processed. Define $$E_i = \\sum_{k=1}^Kp_i(d_k)\\log(p_i(d_k)),$$ $$V_i = \\sum_{k=1}^K p_i(d_k)\\log^2(p_i(d_k))-E_i^2,$$ \\((d_1,\\dots,d_K)\\) possible values \\(Y_j\\). sequential marginal node monitor vertex \\(Y_j\\) defined $$Z_{ij}=\\frac{-\\sum_{k=1}^\\log(p_k(y_{kj}))-\\sum_{k=1}^E_k}{\\sqrt{\\sum_{k=1}^iV_k}}.$$ Values \\(Z_{ij}\\) \\(|Z_{ij}|> 1.96\\) can give indication poor model fit vertex \\(Y_j\\) first -1 observations processed. sequential conditional node monitor vertex \\(Y_j\\) defined  $$Z_{ij}=\\frac{-\\sum_{k=1}^\\log(p_k(y_{kj}|y_{k1},\\dots,y_{k(j-1)},y_{k(j+1)},\\dots,y_{km}))-\\sum_{k=1}^E_k}{\\sqrt{\\sum_{k=1}^iV_k}},$$  \\(E_k\\) \\(V_k\\) computed respect \\(p_k(y_{kj}|y_{k1},\\dots,y_{k(j-1)},y_{k(j+1)},\\dots,y_{km})\\). , values \\(Z_{ij}\\) \\(|Z_{ij}|> 1.96\\) can give indication poor model fit vertex \\(Y_j\\).","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/seq_node_monitor.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sequential node monitors — seq_node_monitor","text":"Cowell, R. G., Dawid, P., Lauritzen, S. L., & Spiegelhalter, D. J. (2006). Probabilistic networks expert systems: Exact computational methods Bayesian networks. Springer Science & Business Media. Cowell, R. G., Verrall, R. J., & Yoon, Y. K. (2007). Modeling operational risk Bayesian networks. Journal Risk Insurance, 74(4), 795-827.","code":""},{"path":[]},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/seq_node_monitor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sequential node monitors — seq_node_monitor","text":"","code":"seq_marg_monitor(chds_bn, chds[1:100,], \"Events\") #> Marginal Node Monitor for Events  #>  Minimum  \t -0.90887  #>  Maximum \t 2.286794 seq_marg_monitor(chds_bn, chds[1:100,], \"Admission\") #> Marginal Node Monitor for Admission  #>  Minimum  \t -1.361533  #>  Maximum \t 0.5888986"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/seq_pa_ch_monitor.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequential parent-child node monitors — seq_pa_ch_monitor","title":"Sequential parent-child node monitors — seq_pa_ch_monitor","text":"Sequential node monitor vertex Bayesian network specific configuration parents","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/seq_pa_ch_monitor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequential parent-child node monitors — seq_pa_ch_monitor","text":"","code":"seq_pa_ch_monitor(dag, df, node.name, pa.names, pa.val, alpha = \"default\")"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/seq_pa_ch_monitor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequential parent-child node monitors — seq_pa_ch_monitor","text":"dag object class bn bnlearn package df base R style dataframe node.name node compute monitor pa.names vector including names parents node.name pa.val vector including levels pa.names considered alpha single integer. default, number max levels df","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/seq_pa_ch_monitor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sequential parent-child node monitors — seq_pa_ch_monitor","text":"vector including scores \\(Z_{ij}\\).","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/seq_pa_ch_monitor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sequential parent-child node monitors — seq_pa_ch_monitor","text":"Consider Bayesian network variables \\(Y_1,\\dots,Y_m\\) suppose dataset \\((\\boldsymbol{y}_1,\\dots,\\boldsymbol{y}_n)\\) observed, \\(\\boldsymbol{y}_i=(y_{i1},\\dots,y_{im})\\) \\(y_{ij}\\) -th observation j-th variable. Consider configuration \\(\\pi_j\\) parents consider sub-vector \\(\\boldsymbol{y}'=(\\boldsymbol{y}_1',\\dots,\\boldsymbol{y}_{N'}')\\) \\((\\boldsymbol{y}_1,\\dots,\\boldsymbol{y}_n)\\) including observations parents \\(Y_j\\) take value \\(\\pi_j\\) . Let \\(p_i(\\cdot|\\pi_j)\\) conditional distribution \\(Y_j\\) given parents take value \\(\\pi_j\\) first -1 observations processed. Define $$E_i = \\sum_{k=1}^Kp_i(d_k|\\pi_j)\\log(p_i(d_k|\\pi_j)),$$ $$V_i = \\sum_{k=1}^K p_i(d_k|\\pi_j)\\log^2(p_i(d_k|\\pi_j))-E_i^2,$$ \\((d_1,\\dots,d_K)\\) possible values \\(Y_j\\). sequential parent-child node monitor vertex \\(Y_j\\) parent configuration \\(\\pi_j\\) defined  $$Z_{ij}=\\frac{-\\sum_{k=1}^\\log(p_k(y_{kj}'|\\pi_j))-\\sum_{k=1}^E_k}{\\sqrt{\\sum_{k=1}^iV_k}}.$$  Values \\(Z_{ij}\\) \\(|Z_{ij}|> 1.96\\) can give indication poor model fit vertex \\(Y_j\\) first -1 observations processed.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/seq_pa_ch_monitor.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sequential parent-child node monitors — seq_pa_ch_monitor","text":"Cowell, R. G., Dawid, P., Lauritzen, S. L., & Spiegelhalter, D. J. (2006). Probabilistic networks expert systems: Exact computational methods Bayesian networks. Springer Science & Business Media. Cowell, R. G., Verrall, R. J., & Yoon, Y. K. (2007). Modeling operational risk Bayesian networks. Journal Risk Insurance, 74(4), 795-827.","code":""},{"path":[]},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/seq_pa_ch_monitor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sequential parent-child node monitors — seq_pa_ch_monitor","text":"","code":"seq_pa_ch_monitor(chds_bn, chds, \"Events\", \"Social\", \"High\", 3) #> Parent Child Node Monitor  #>  Minimum  \t -1.708238  #>  Maximum \t 3.45353"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/synthetic_bn.html","id":null,"dir":"Reference","previous_headings":"","what":"A synthetic Bayesian network — synthetic_bn","title":"A synthetic Bayesian network — synthetic_bn","text":"synthetic_bn bn.fit object simple Bayesian network involving three variables.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/synthetic_bn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A synthetic Bayesian network — synthetic_bn","text":"","code":"synthetic_bn"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/synthetic_bn.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A synthetic Bayesian network — synthetic_bn","text":"Bayesian network bnsens_example comprehends following nodes: y1: three-level factor levels 1, 2, 3. y2: three-level factor levels 1, 2, 3. y3:  three-level factor levels 1, 2, 3.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/synthetic_bn.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A synthetic Bayesian network — synthetic_bn","text":"Manuele Leonelli, Eva Riccomagno (2018). \"geometric characterisation sensitivity analysis monomial models\". https://arxiv.org/abs/1901.02058","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/synthetic_cbn.html","id":null,"dir":"Reference","previous_headings":"","what":"A synthetic continuous Bayesian network — synthetic_cbn","title":"A synthetic continuous Bayesian network — synthetic_cbn","text":"synthetic continuous Bayesian network","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/synthetic_cbn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A synthetic continuous Bayesian network — synthetic_cbn","text":"","code":"synthetic_gbn  synthetic_ci"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/synthetic_cbn.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A synthetic continuous Bayesian network — synthetic_cbn","text":"continuous Bayesian networks four variables (\"y1\", \"y2\", \"y3\", \"y4\"), embedding statement \"y1\" independent \"y3\" given \"y2\".     Bayesian network available object class GBN object class CI. object class GBN length 3. object class CI length 4.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/synthetic_cbn.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A synthetic continuous Bayesian network — synthetic_cbn","text":"C. Görgen & M. Leonelli (2020), Model-preserving sensitivity analysis families Gaussian distributions.  Journal Machine Learning Research, 21: 1-32.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/travel.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian network on travel survey — travel","title":"Bayesian network on travel survey — travel","text":"travel bn.fit object Bayesian network traveling preferences survey.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/travel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian network on travel survey — travel","text":"","code":"travel"},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/travel.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Bayesian network on travel survey — travel","text":"Bayesian network travel includes following nodes: : three-level factor levels young, adult, old. indicates age individual. S: two level-factor levels M (male) F (female). indicates gender individual. E: two level-factor levels high uni. indicates education level individual. O: two level-factor levels emp (employed) self (self-employed). indicates occupation individual. R: two level-factor levels small big. indicates size residence individual. T: three level-factor levels car, train . indicates preferred mean transportation individual.","code":""},{"path":"https://manueleleonelli.github.io/bnmonitor/reference/travel.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Bayesian network on travel survey — travel","text":"Scutari, M., & Denis, J. B. (2014). Bayesian networks: examples R. Chapman Hall/CRC.","code":""}]
